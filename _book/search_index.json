[["index.html", "GO and KEGG analysis for MAPP paper Chapter 1 Prerequisites 1.1 Libraries 1.2 Options 1.3 Universe set of genes 1.4 Render the book 1.5 Session info", " GO and KEGG analysis for MAPP paper Ian U. Kouzel 2022-09-21 Chapter 1 Prerequisites 1.1 Libraries library(tidyverse) library(clusterProfiler) library(pathview) library(enrichplot) library(org.Hs.eg.db) library(readr) library(DT) 1.2 Options # GO analysis minGSSize &lt;- 10 # minimal size of genes annotated by Ontology term for testing organismDB &lt;- &quot;org.Hs.eg.db&quot; # human DB pvalueCutoff = 0.1 # p-value cutoff showCategory = 10 # number of GOs to plot genes_padj_cutoff = 0.1 # padjusted cut of for genes that are different # between control and cancer conditions 1.3 Universe set of genes 1.3.1 GO (ENSEMBL) universe &lt;- read.table(&quot;data/cassette_exons_universe_table.tsv&quot;, header = T) %&gt;% dplyr::select(gene_id) %&gt;% unlist() universe &lt;- unique(unlist(strsplit(universe, &quot;,&quot;))) head(universe, 10) ## [1] &quot;ENSG00000174371&quot; &quot;ENSG00000117009&quot; &quot;ENSG00000284770&quot; &quot;ENSG00000285053&quot; &quot;ENSG00000143774&quot; ## [6] &quot;ENSG00000143801&quot; &quot;ENSG00000143353&quot; &quot;ENSG00000117691&quot; &quot;ENSG00000117625&quot; &quot;ENSG00000143469&quot; length(universe) ## [1] 10273 1.3.2 KEGG (ENTREZ) ENTREZ_universe &lt;- read.table(&quot;data/cassette_exons_universe_table.tsv&quot;, header = T) %&gt;% dplyr::select(gene_id) %&gt;% unlist() ENTREZ_universe &lt;- unique(unlist(strsplit(ENTREZ_universe, &quot;,&quot;))) ENTREZ_universe &lt;- bitr(ENTREZ_universe, fromType = &quot;ENSEMBL&quot;, toType = &quot;ENTREZID&quot;, OrgDb= organismDB) %&gt;% dplyr::select(ENTREZID) %&gt;% unlist() ## &#39;select()&#39; returned 1:many mapping between keys and columns ## Warning in bitr(ENTREZ_universe, fromType = &quot;ENSEMBL&quot;, toType = &quot;ENTREZID&quot;, : 0.91% of input gene ## IDs are fail to map... ENTREZ_universe &lt;- unique(unlist(strsplit(ENTREZ_universe, &quot;,&quot;))) head(ENTREZ_universe) ## [1] &quot;9156&quot; &quot;8564&quot; &quot;6905&quot; &quot;2987&quot; &quot;5664&quot; &quot;127018&quot; length(ENTREZ_universe) ## [1] 10220 1.4 Render the book bookdown::render_book(&quot;index.Rmd&quot;, &quot;bookdown::gitbook&quot;) install.packages(&quot;bookdown&quot;) # or the development version # devtools::install_github(&quot;rstudio/bookdown&quot;) 1.5 Session info sessionInfo() ## R version 4.2.0 (2022-04-22) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Monterey 12.0.1 ## ## Matrix products: default ## LAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats4 stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] matrixTests_0.1.9.1 DT_0.23 org.Hs.eg.db_3.15.0 AnnotationDbi_1.58.0 ## [5] IRanges_2.30.0 S4Vectors_0.34.0 Biobase_2.56.0 BiocGenerics_0.42.0 ## [9] enrichplot_1.16.0 pathview_1.36.0 clusterProfiler_4.4.1 forcats_0.5.1 ## [13] stringr_1.4.0 dplyr_1.0.9 purrr_0.3.4 readr_2.1.2 ## [17] tidyr_1.2.0 tibble_3.1.7 ggplot2_3.3.6 tidyverse_1.3.1 ## ## loaded via a namespace (and not attached): ## [1] readxl_1.4.0 shadowtext_0.1.2 backports_1.4.1 fastmatch_1.1-3 ## [5] plyr_1.8.7 igraph_1.3.1 lazyeval_0.2.2 splines_4.2.0 ## [9] BiocParallel_1.30.0 GenomeInfoDb_1.32.1 digest_0.6.29 yulab.utils_0.0.4 ## [13] htmltools_0.5.2 GOSemSim_2.22.0 viridis_0.6.2 GO.db_3.15.0 ## [17] fansi_1.0.3 magrittr_2.0.3 memoise_2.0.1 tzdb_0.3.0 ## [21] Biostrings_2.64.0 graphlayouts_0.8.0 modelr_0.1.8 matrixStats_0.62.0 ## [25] colorspace_2.0-3 blob_1.2.3 rvest_1.0.2 ggrepel_0.9.1 ## [29] haven_2.5.0 xfun_0.31 crayon_1.5.1 RCurl_1.98-1.6 ## [33] jsonlite_1.8.0 graph_1.74.0 scatterpie_0.1.7 ape_5.6-2 ## [37] glue_1.6.2 polyclip_1.10-0 gtable_0.3.0 zlibbioc_1.42.0 ## [41] XVector_0.36.0 Rgraphviz_2.40.0 scales_1.2.0 DOSE_3.22.0 ## [45] DBI_1.1.2 Rcpp_1.0.8.3 viridisLite_0.4.0 gridGraphics_0.5-1 ## [49] tidytree_0.3.9 bit_4.0.4 htmlwidgets_1.5.4 httr_1.4.3 ## [53] fgsea_1.22.0 RColorBrewer_1.1-3 ellipsis_0.3.2 pkgconfig_2.0.3 ## [57] XML_3.99-0.9 farver_2.1.0 sass_0.4.1 dbplyr_2.1.1 ## [61] utf8_1.2.2 ggplotify_0.1.0 tidyselect_1.1.2 rlang_1.0.4 ## [65] reshape2_1.4.4 munsell_0.5.0 cellranger_1.1.0 tools_4.2.0 ## [69] cachem_1.0.6 downloader_0.4 cli_3.3.0 generics_0.1.2 ## [73] RSQLite_2.2.14 broom_0.8.0 evaluate_0.15 fastmap_1.1.0 ## [77] yaml_2.3.5 ggtree_3.4.0 knitr_1.39 bit64_4.0.5 ## [81] fs_1.5.2 tidygraph_1.2.1 KEGGREST_1.36.0 ggraph_2.0.5 ## [85] nlme_3.1-157 KEGGgraph_1.56.0 aplot_0.1.4 DO.db_2.9 ## [89] xml2_1.3.3 compiler_4.2.0 rstudioapi_0.13 png_0.1-7 ## [93] reprex_2.0.1 treeio_1.20.0 tweenr_1.0.2 bslib_0.3.1 ## [97] stringi_1.7.6 lattice_0.20-45 Matrix_1.4-1 vctrs_0.4.1 ## [101] pillar_1.7.0 lifecycle_1.0.1 jquerylib_0.1.4 data.table_1.14.2 ## [105] bitops_1.0-7 patchwork_1.1.1 qvalue_2.28.0 R6_2.5.1 ## [109] bookdown_0.27 gridExtra_2.3 MASS_7.3-57 assertthat_0.2.1 ## [113] withr_2.5.0 GenomeInfoDbData_1.2.8 parallel_4.2.0 hms_1.1.1 ## [117] grid_4.2.0 ggfun_0.0.6 rmarkdown_2.14 ggforce_0.3.3 ## [121] lubridate_1.8.0 "],["go-and-kegg-common-targets-06.html", "Chapter 2 GO and KEGG: common targets 06 2.1 Load the data 2.2 Gene ontology (GO) 2.3 KEGG", " Chapter 2 GO and KEGG: common targets 06 2.1 Load the data data_MAPP &lt;- read.table(&quot;data/inclusion_tables/0.6/common_targets.tsv&quot;, header = T) # select control and cancer columns library(tidyverse) CTRL &lt;- data_MAPP %&gt;% dplyr::select_if(., grepl(&quot;^CONTROL_&quot;, names(.))) CANCER &lt;- data_MAPP %&gt;% dplyr::select_if(., grepl(&quot;^CANCER_&quot;, names(.))) # use row_t_welch instead of usual t.test function since t.test produces # errors in some cases: t.test error: data are essentially constant # NAs are assigned for problematic cases # https://stats.stackexchange.com/questions/499634/t-test-error-data-are-essentially-constant/499637 library(matrixTests) data_MAPP &lt;- data_MAPP %&gt;% mutate(padj = p.adjust(row_t_welch(CTRL, CANCER)$pvalue, method = &quot;BH&quot;, n=nrow(data_MAPP))) ## Warning: row_t_welch: 57 of the rows were essentially constant. ## First occurrence at row 34 # data_MAPP &lt;- data_MAPP %&gt;% # mutate(pval=row_t_welch(CTRL, CANCER)$pvalue) sum(is.na(data_MAPP$padj)) ## [1] 57 DT::datatable(data_MAPP, options = list(scrollX = TRUE)) 2.2 Gene ontology (GO) 2.2.1 Prepare the gene list # select genes from data_MAPP table based on padj values # threshold is set in index.Rmd: genes_padj_cutoff genes &lt;- na.omit(data_MAPP) %&gt;% arrange(desc(ABSDIFF)) %&gt;% filter(padj &lt; genes_padj_cutoff) %&gt;% dplyr::select(gene_id) %&gt;% unlist() genes &lt;- unlist(strsplit(genes, &quot;,&quot;)) head(genes) ## gene_id1 gene_id2 gene_id3 gene_id4 gene_id5 ## &quot;ENSG00000136699&quot; &quot;ENSG00000136153&quot; &quot;ENSG00000007047&quot; &quot;ENSG00000070961&quot; &quot;ENSG00000137726&quot; ## gene_id6 ## &quot;ENSG00000146147&quot; 2.2.2 Biological process (BP) type_of_GO = &quot;BP&quot; assign(paste0(&quot;GO_&quot;, type_of_GO), enrichGO( genes, organismDB, keyType = &quot;ENSEMBL&quot;, ont = type_of_GO, pvalueCutoff = pvalueCutoff, minGSSize = minGSSize, pAdjustMethod = &quot;BH&quot;, universe = universe, readable = TRUE)) df_GO &lt;- eval(parse(text = paste0(&quot;GO_&quot;, type_of_GO))) if(nrow(df_GO) &gt; 0){ DT::datatable(df_GO@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no GOs were found&quot; if(nrow(df_GO) &gt; 0){ barplot(df_GO, showCategory = showCategory, title = type_of_GO) } else &quot;no GOs to plot&quot; 2.2.3 Molecular function (MF) type_of_GO = &quot;MF&quot; assign(paste0(&quot;GO_&quot;, type_of_GO), enrichGO( genes, organismDB, keyType = &quot;ENSEMBL&quot;, ont = type_of_GO, pvalueCutoff = pvalueCutoff, minGSSize = minGSSize, pAdjustMethod = &quot;BH&quot;, universe = universe, readable = TRUE)) df_GO &lt;- eval(parse(text = paste0(&quot;GO_&quot;, type_of_GO))) if(nrow(df_GO) &gt; 0){ DT::datatable(df_GO@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no GOs were found&quot; if(nrow(df_GO) &gt; 0){ barplot(df_GO, showCategory = showCategory, title = type_of_GO) } else &quot;no GOs to plot&quot; 2.2.4 Cellular component (CC) type_of_GO = &quot;CC&quot; assign(paste0(&quot;GO_&quot;, type_of_GO), enrichGO( genes, organismDB, keyType = &quot;ENSEMBL&quot;, ont = type_of_GO, pvalueCutoff = pvalueCutoff, minGSSize = minGSSize, pAdjustMethod = &quot;BH&quot;, universe = universe, readable = TRUE)) df_GO &lt;- eval(parse(text = paste0(&quot;GO_&quot;, type_of_GO))) if(nrow(df_GO) &gt; 0){ DT::datatable(df_GO@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no GOs were found&quot; if(nrow(df_GO) &gt; 0){ barplot(df_GO, showCategory = showCategory, title = type_of_GO) } else &quot;no GOs to plot&quot; 2.3 KEGG 2.3.1 Prepare the the data # select gene_id in ENSEMBL format and DIFF from the result table DIFF &lt;- data_MAPP %&gt;% dplyr::select(gene_id, DIFF) # rename the gene_id column names(DIFF)[1] &lt;- &quot;ENSEMBL&quot; head(DIFF) # create new df by converting ENSEMBL ID into ENTREZID and adding DIFF column # sort table by in descending order by abs(DIFF) genes_ENTREZ_df &lt;- bitr(na.omit(data_MAPP$gene_id[data_MAPP$padj &lt; genes_padj_cutoff]), fromType = &quot;ENSEMBL&quot;, toType = &quot;ENTREZID&quot;, OrgDb= organismDB) %&gt;% left_join(DIFF, by = &quot;ENSEMBL&quot;) %&gt;% arrange(desc(abs(DIFF))) ## &#39;select()&#39; returned 1:many mapping between keys and columns ## Warning in bitr(na.omit(data_MAPP$gene_id[data_MAPP$padj &lt; genes_padj_cutoff]), : 1.27% of input ## gene IDs are fail to map... head(genes_ENTREZ_df ) # create a vector with DIFF values genes_DIFF &lt;- genes_ENTREZ_df$DIFF genes_DIFF ## [1] -0.8979957360 -0.8584353547 -0.8257323117 -0.7876479961 -0.7707704024 -0.7313491711 ## [7] -0.7283427350 -0.7255878978 -0.6812689861 -0.6761845435 -0.6457757451 0.6131462418 ## [13] -0.6126834170 -0.6059904981 -0.5835027874 0.5826520665 -0.5779614938 -0.5731150152 ## [19] -0.5039827010 0.4997984468 -0.4949639671 -0.4780925852 -0.4673897228 0.4601035870 ## [25] -0.4476402302 -0.4461977900 -0.4435530520 -0.4326941390 -0.4292709048 -0.4214836971 ## [31] 0.4212018927 -0.4207321022 -0.4128495278 -0.4079200779 -0.3993679992 -0.3990899594 ## [37] -0.3940557482 -0.3936374396 -0.3917491879 -0.3759729828 -0.3746133848 -0.3740641877 ## [43] -0.3624652536 -0.3590452996 -0.3346734528 0.3303761298 -0.3246021231 -0.3218975259 ## [49] -0.3177806050 -0.3166976440 -0.3164674623 -0.3064956280 0.3054761572 -0.2993130088 ## [55] -0.2982095154 -0.2961029474 0.2911460988 0.2866329682 0.2828069050 -0.2802366615 ## [61] -0.2796783989 -0.2773482221 -0.2752379288 -0.2714972937 -0.2694050827 -0.2623990233 ## [67] -0.2614033917 -0.2541493969 -0.2405546435 0.2346973949 -0.2330956201 -0.2330442045 ## [73] -0.2235605792 -0.2199805472 -0.2189998265 -0.2183150011 0.2181638192 -0.2177805915 ## [79] -0.2161346331 0.2159104888 -0.2149441538 -0.2137478381 -0.2082725497 -0.2082416337 ## [85] -0.2070688578 0.2068000831 -0.2064822542 0.2021587608 -0.1966051421 0.1945417443 ## [91] 0.1931904684 -0.1783068393 0.1765509237 -0.1751534582 -0.1732551019 -0.1718531956 ## [97] -0.1709080057 -0.1705078778 -0.1689292006 -0.1648515758 -0.1635630605 -0.1635210081 ## [103] -0.1610984290 -0.1532299449 -0.1528324557 0.1528307243 -0.1461161131 -0.1443977455 ## [109] -0.1428702047 0.1424137390 -0.1394626681 -0.1369444408 -0.1308699437 -0.1251072462 ## [115] -0.1165410320 -0.1157577022 -0.1140257975 -0.1098105746 -0.1085861913 -0.1084035989 ## [121] -0.1071484814 -0.1053005124 0.1020073403 -0.1011045089 -0.1008724841 -0.0996860714 ## [127] 0.0989993343 0.0930629753 -0.0921203587 -0.0859871735 -0.0851788674 0.0847634790 ## [133] -0.0819791847 -0.0795743916 -0.0784768772 -0.0729334772 -0.0694070759 0.0662037416 ## [139] -0.0654547864 -0.0634562256 -0.0625232801 -0.0613524086 -0.0602049942 0.0569950343 ## [145] -0.0566128969 -0.0544200094 -0.0512795212 -0.0486206120 -0.0482100654 -0.0455517666 ## [151] -0.0455517666 -0.0455434529 -0.0446491788 0.0422874365 0.0408642398 -0.0393809472 ## [157] 0.0391562069 -0.0388612277 0.0372750994 -0.0363436702 -0.0345159444 -0.0335540588 ## [163] -0.0332844259 -0.0316590939 -0.0297987331 -0.0268358961 0.0241351292 -0.0226489685 ## [169] -0.0208535623 -0.0188973975 0.0158897525 -0.0155968569 -0.0150684310 -0.0147565153 ## [175] -0.0097996006 0.0085076823 -0.0078767310 -0.0065933510 -0.0042393945 -0.0041564412 ## [181] 0.0039131408 -0.0034842387 -0.0034348407 -0.0015689498 -0.0013973071 0.0010281511 ## [187] 0.0006295817 -0.0004179173 0.0003624584 0.0000000000 0.0000000000 0.0000000000 # add names based on ENTREZID names(genes_DIFF) &lt;- genes_ENTREZ_df$ENTREZID genes_DIFF ## 55627 4008 57787 490 53826 90523 ## -0.8979957360 -0.8584353547 -0.8257323117 -0.7876479961 -0.7707704024 -0.7313491711 ## 782 23096 26052 28964 23114 222658 ## -0.7283427350 -0.7255878978 -0.6812689861 -0.6761845435 -0.6457757451 0.6131462418 ## 2550 8541 57828 23092 54478 22885 ## -0.6126834170 -0.6059904981 -0.5835027874 0.5826520665 -0.5779614938 -0.5731150152 ## 23048 221955 4628 157574 1981 23048 ## -0.5039827010 0.4997984468 -0.4949639671 -0.4780925852 -0.4673897228 0.4601035870 ## 23229 57217 2036 84892 26115 22864 ## -0.4476402302 -0.4461977900 -0.4435530520 -0.4326941390 -0.4292709048 -0.4214836971 ## 57179 23095 92840 490 2036 84698 ## 0.4212018927 -0.4207321022 -0.4128495278 -0.4079200779 -0.3993679992 -0.3990899594 ## 55738 10892 800 6334 4430 9209 ## -0.3940557482 -0.3936374396 -0.3917491879 -0.3759729828 -0.3746133848 -0.3740641877 ## 5909 26260 1305 23048 493 53826 ## -0.3624652536 -0.3590452996 -0.3346734528 0.3303761298 -0.3246021231 -0.3218975259 ## 51533 126626 3796 375790 8496 1729 ## -0.3177806050 -0.3166976440 -0.3164674623 -0.3064956280 0.3054761572 -0.2993130088 ## 57646 23317 23092 8932 9815 9659 ## -0.2982095154 -0.2961029474 0.2911460988 0.2866329682 0.2828069050 -0.2802366615 ## 57706 55605 6185 23513 55627 54413 ## -0.2796783989 -0.2773482221 -0.2752379288 -0.2714972937 -0.2694050827 -0.2623990233 ## 55054 818 9847 351 6749 5209 ## -0.2614033917 -0.2541493969 -0.2405546435 0.2346973949 -0.2330956201 -0.2330442045 ## 58513 51195 55605 114883 79925 23199 ## -0.2235605792 -0.2199805472 -0.2189998265 -0.2183150011 0.2181638192 -0.2177805915 ## 445815 11252 204 79772 55614 115704 ## -0.2161346331 0.2159104888 -0.2149441538 -0.2137478381 -0.2082725497 -0.2082416337 ## 288 283643 55605 23224 3274 168667 ## -0.2070688578 0.2068000831 -0.2064822542 0.2021587608 -0.1966051421 0.1945417443 ## 162655 8751 10425 81562 26750 29959 ## 0.1931904684 -0.1783068393 0.1765509237 -0.1751534582 -0.1732551019 -0.1718531956 ## 65258 547 23559 9650 10087 58155 ## -0.1709080057 -0.1705078778 -0.1689292006 -0.1648515758 -0.1635630605 -0.1635210081 ## 9727 54462 23139 91664 4926 8751 ## -0.1610984290 -0.1532299449 -0.1528324557 0.1528307243 -0.1461161131 -0.1443977455 ## 51304 3836 10902 116986 57153 152926 ## -0.1428702047 0.1424137390 -0.1394626681 -0.1369444408 -0.1308699437 -0.1251072462 ## 9873 25829 2801 84167 7402 54808 ## -0.1165410320 -0.1157577022 -0.1140257975 -0.1098105746 -0.1085861913 -0.1084035989 ## 131965 22978 64963 54462 260425 23559 ## -0.1071484814 -0.1053005124 0.1020073403 -0.1011045089 -0.1008724841 -0.0996860714 ## 5977 80017 6257 10580 85021 2635 ## 0.0989993343 0.0930629753 -0.0921203587 -0.0859871735 -0.0851788674 0.0847634790 ## 10818 22902 51642 6229 9322 58475 ## -0.0819791847 -0.0795743916 -0.0784768772 -0.0729334772 -0.0694070759 0.0662037416 ## 65009 6714 54840 10580 113451 79258 ## -0.0654547864 -0.0634562256 -0.0625232801 -0.0613524086 -0.0602049942 0.0569950343 ## 3959 9223 23022 56853 9112 7982 ## -0.0566128969 -0.0544200094 -0.0512795212 -0.0486206120 -0.0482100654 -0.0455517666 ## 93655 8725 2801 90423 521 1741 ## -0.0455517666 -0.0455434529 -0.0446491788 0.0422874365 0.0408642398 -0.0393809472 ## 9832 10313 90523 51133 22978 3908 ## 0.0391562069 -0.0388612277 0.0372750994 -0.0363436702 -0.0345159444 -0.0335540588 ## 26750 10497 5209 5764 140739 10212 ## -0.0332844259 -0.0316590939 -0.0297987331 -0.0268358961 0.0241351292 -0.0226489685 ## 23365 10212 3959 11170 1729 3778 ## -0.0208535623 -0.0188973975 0.0158897525 -0.0155968569 -0.0150684310 -0.0147565153 ## 9774 10580 53826 10898 154215 818 ## -0.0097996006 0.0085076823 -0.0078767310 -0.0065933510 -0.0042393945 -0.0041564412 ## 9832 6709 6229 57217 3778 55605 ## 0.0039131408 -0.0034842387 -0.0034348407 -0.0015689498 -0.0013973071 0.0010281511 ## 113451 3778 10313 51304 23022 23229 ## 0.0006295817 -0.0004179173 0.0003624584 0.0000000000 0.0000000000 0.0000000000 2.3.2 run KEGG KEGGresults &lt;- enrichKEGG( names(genes_DIFF), organism = &quot;hsa&quot;, keyType = &quot;ncbi-geneid&quot;, pvalueCutoff = pvalueCutoff, pAdjustMethod = &quot;BH&quot;, universe = as.character(na.omit(ENTREZ_universe)), use_internal_data = FALSE ) ## Reading KEGG annotation online: ## ## Reading KEGG annotation online: ## ## Reading KEGG annotation online: if(nrow(KEGGresults@result %&gt;% filter(p.adjust &lt; pvalueCutoff)) &gt; 0){ DT::datatable(KEGGresults@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no KEGG pathways were found&quot; ## [1] &quot;no KEGG pathways were found&quot; "],["go-and-kegg-common-targets-09.html", "Chapter 3 GO and KEGG: common targets 09 3.1 Load the data 3.2 Gene ontology (GO) 3.3 KEGG", " Chapter 3 GO and KEGG: common targets 09 3.1 Load the data data_MAPP &lt;- read.table(&quot;data/inclusion_tables/0.9/common_targets.tsv&quot;, header = T) # select control and cancer columns library(tidyverse) CTRL &lt;- data_MAPP %&gt;% dplyr::select_if(., grepl(&quot;^CONTROL_&quot;, names(.))) CANCER &lt;- data_MAPP %&gt;% dplyr::select_if(., grepl(&quot;^CANCER_&quot;, names(.))) # use row_t_welch instead of usual t.test function since t.test produces # errors in some cases: t.test error: data are essentially constant # NAs are assigned for problematic cases # https://stats.stackexchange.com/questions/499634/t-test-error-data-are-essentially-constant/499637 library(matrixTests) data_MAPP &lt;- data_MAPP %&gt;% mutate(padj = p.adjust(row_t_welch(CTRL, CANCER)$pvalue, method = &quot;BH&quot;, n=nrow(data_MAPP))) ## Warning: row_t_welch: 26 of the rows were essentially constant. ## First occurrence at row 19 # data_MAPP &lt;- data_MAPP %&gt;% # mutate(pval=row_t_welch(CTRL, CANCER)$pvalue) sum(is.na(data_MAPP$padj)) ## [1] 26 DT::datatable(data_MAPP, options = list(scrollX = TRUE)) 3.2 Gene ontology (GO) 3.2.1 Prepare the gene list # select genes from data_MAPP table based on padj values # threshold is set in index.Rmd: genes_padj_cutoff genes &lt;- na.omit(data_MAPP) %&gt;% arrange(desc(ABSDIFF)) %&gt;% filter(padj &lt; genes_padj_cutoff) %&gt;% dplyr::select(gene_id) %&gt;% unlist() genes &lt;- unlist(strsplit(genes, &quot;,&quot;)) head(genes) ## gene_id1 gene_id2 gene_id3 gene_id4 gene_id5 ## &quot;ENSG00000136153&quot; &quot;ENSG00000007047&quot; &quot;ENSG00000070961&quot; &quot;ENSG00000137726&quot; &quot;ENSG00000146147&quot; ## gene_id6 ## &quot;ENSG00000067191&quot; 3.2.2 Biological process (BP) type_of_GO = &quot;BP&quot; assign(paste0(&quot;GO_&quot;, type_of_GO), enrichGO( genes, organismDB, keyType = &quot;ENSEMBL&quot;, ont = type_of_GO, pvalueCutoff = pvalueCutoff, minGSSize = minGSSize, pAdjustMethod = &quot;BH&quot;, universe = universe, readable = TRUE)) df_GO &lt;- eval(parse(text = paste0(&quot;GO_&quot;, type_of_GO))) if(nrow(df_GO) &gt; 0){ DT::datatable(df_GO@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no GOs were found&quot; if(nrow(df_GO) &gt; 0){ barplot(df_GO, showCategory = showCategory, title = type_of_GO) } else &quot;no GOs to plot&quot; 3.2.3 Molecular function (MF) type_of_GO = &quot;MF&quot; assign(paste0(&quot;GO_&quot;, type_of_GO), enrichGO( genes, organismDB, keyType = &quot;ENSEMBL&quot;, ont = type_of_GO, pvalueCutoff = pvalueCutoff, minGSSize = minGSSize, pAdjustMethod = &quot;BH&quot;, universe = universe, readable = TRUE)) df_GO &lt;- eval(parse(text = paste0(&quot;GO_&quot;, type_of_GO))) if(nrow(df_GO) &gt; 0){ DT::datatable(df_GO@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no GOs were found&quot; if(nrow(df_GO) &gt; 0){ barplot(df_GO, showCategory = showCategory, title = type_of_GO) } else &quot;no GOs to plot&quot; 3.2.4 Cellular component (CC) type_of_GO = &quot;CC&quot; assign(paste0(&quot;GO_&quot;, type_of_GO), enrichGO( genes, organismDB, keyType = &quot;ENSEMBL&quot;, ont = type_of_GO, pvalueCutoff = pvalueCutoff, minGSSize = minGSSize, pAdjustMethod = &quot;BH&quot;, universe = universe, readable = TRUE)) df_GO &lt;- eval(parse(text = paste0(&quot;GO_&quot;, type_of_GO))) if(nrow(df_GO) &gt; 0){ DT::datatable(df_GO@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no GOs were found&quot; if(nrow(df_GO) &gt; 0){ barplot(df_GO, showCategory = showCategory, title = type_of_GO) } else &quot;no GOs to plot&quot; 3.3 KEGG 3.3.1 Prepare the the data # select gene_id in ENSEMBL format and DIFF from the result table DIFF &lt;- data_MAPP %&gt;% dplyr::select(gene_id, DIFF) # rename the gene_id column names(DIFF)[1] &lt;- &quot;ENSEMBL&quot; head(DIFF) # create new df by converting ENSEMBL ID into ENTREZID and adding DIFF column # sort table by in descending order by abs(DIFF) genes_ENTREZ_df &lt;- bitr(na.omit(data_MAPP$gene_id[data_MAPP$padj &lt; genes_padj_cutoff]), fromType = &quot;ENSEMBL&quot;, toType = &quot;ENTREZID&quot;, OrgDb= organismDB) %&gt;% left_join(DIFF, by = &quot;ENSEMBL&quot;) %&gt;% arrange(desc(abs(DIFF))) ## &#39;select()&#39; returned 1:1 mapping between keys and columns ## Warning in bitr(na.omit(data_MAPP$gene_id[data_MAPP$padj &lt; genes_padj_cutoff]), : 2.33% of input ## gene IDs are fail to map... head(genes_ENTREZ_df ) # create a vector with DIFF values genes_DIFF &lt;- genes_ENTREZ_df$DIFF genes_DIFF ## [1] -0.8584353547 -0.8257323117 -0.7876479961 -0.7707704024 -0.7313491711 -0.7283427350 ## [7] -0.6761845435 -0.6457757451 -0.6126834170 -0.5779614938 -0.5039827010 -0.4780925852 ## [13] -0.4673897228 -0.4435530520 -0.4292709048 -0.4214836971 -0.4207321022 -0.4128495278 ## [19] -0.4079200779 -0.3993679992 -0.3936374396 -0.3917491879 -0.3759729828 -0.3624652536 ## [25] -0.3590452996 0.3303761298 -0.3246021231 -0.3218975259 0.3054761572 -0.2982095154 ## [31] -0.2961029474 0.2911460988 -0.2802366615 -0.2796783989 -0.2773482221 -0.2752379288 ## [37] -0.2714972937 -0.2694050827 -0.2623990233 -0.2541493969 -0.2405546435 -0.2189998265 ## [43] 0.2181638192 -0.2177805915 -0.2082725497 -0.2070688578 -0.2064822542 0.2021587608 ## [49] -0.1970245440 -0.1966051421 -0.1783068393 0.1765509237 -0.1732551019 -0.1648515758 ## [55] -0.1635630605 -0.1635210081 -0.1532299449 -0.1528324557 0.1528307243 -0.1443977455 ## [61] -0.1394626681 -0.1369444408 -0.1308699437 -0.1251072462 -0.1157577022 -0.1140257975 ## [67] -0.1085861913 -0.1084035989 -0.1071484814 -0.1011045089 0.0930629753 -0.0921203587 ## [73] -0.0851788674 -0.0654547864 -0.0634562256 -0.0613524086 -0.0602049942 -0.0601736573 ## [79] -0.0514930233 -0.0512795212 -0.0494205822 -0.0486206120 -0.0482100654 -0.0393809472 ## [85] 0.0391562069 -0.0388612277 -0.0335540588 -0.0332844259 -0.0324909965 -0.0316590939 ## [91] -0.0208535623 -0.0155968569 0.0085076823 -0.0078767310 -0.0051469196 0.0010281511 ## [97] 0.0006295817 0.0003624584 # add names based on ENTREZID names(genes_DIFF) &lt;- genes_ENTREZ_df$ENTREZID genes_DIFF ## 4008 57787 490 53826 90523 782 ## -0.8584353547 -0.8257323117 -0.7876479961 -0.7707704024 -0.7313491711 -0.7283427350 ## 28964 23114 2550 54478 23048 157574 ## -0.6761845435 -0.6457757451 -0.6126834170 -0.5779614938 -0.5039827010 -0.4780925852 ## 1981 2036 26115 22864 23095 92840 ## -0.4673897228 -0.4435530520 -0.4292709048 -0.4214836971 -0.4207321022 -0.4128495278 ## 490 2036 10892 800 6334 5909 ## -0.4079200779 -0.3993679992 -0.3936374396 -0.3917491879 -0.3759729828 -0.3624652536 ## 26260 23048 493 53826 8496 57646 ## -0.3590452996 0.3303761298 -0.3246021231 -0.3218975259 0.3054761572 -0.2982095154 ## 23317 23092 9659 57706 55605 6185 ## -0.2961029474 0.2911460988 -0.2802366615 -0.2796783989 -0.2773482221 -0.2752379288 ## 23513 55627 54413 818 9847 55605 ## -0.2714972937 -0.2694050827 -0.2623990233 -0.2541493969 -0.2405546435 -0.2189998265 ## 79925 23199 55614 288 55605 23224 ## 0.2181638192 -0.2177805915 -0.2082725497 -0.2070688578 -0.2064822542 0.2021587608 ## 6249 3274 8751 10425 26750 9650 ## -0.1970245440 -0.1966051421 -0.1783068393 0.1765509237 -0.1732551019 -0.1648515758 ## 10087 58155 54462 23139 91664 8751 ## -0.1635630605 -0.1635210081 -0.1532299449 -0.1528324557 0.1528307243 -0.1443977455 ## 10902 116986 57153 152926 25829 2801 ## -0.1394626681 -0.1369444408 -0.1308699437 -0.1251072462 -0.1157577022 -0.1140257975 ## 7402 54808 131965 54462 80017 6257 ## -0.1085861913 -0.1084035989 -0.1071484814 -0.1011045089 0.0930629753 -0.0921203587 ## 85021 65009 6714 10580 113451 10723 ## -0.0851788674 -0.0654547864 -0.0634562256 -0.0613524086 -0.0602049942 -0.0601736573 ## 169792 23022 51094 56853 9112 1741 ## -0.0514930233 -0.0512795212 -0.0494205822 -0.0486206120 -0.0482100654 -0.0393809472 ## 9832 10313 3908 26750 84265 10497 ## 0.0391562069 -0.0388612277 -0.0335540588 -0.0332844259 -0.0324909965 -0.0316590939 ## 23365 11170 10580 53826 94097 55605 ## -0.0208535623 -0.0155968569 0.0085076823 -0.0078767310 -0.0051469196 0.0010281511 ## 113451 10313 ## 0.0006295817 0.0003624584 3.3.2 run KEGG KEGGresults &lt;- enrichKEGG( names(genes_DIFF), organism = &quot;hsa&quot;, keyType = &quot;ncbi-geneid&quot;, pvalueCutoff = pvalueCutoff, pAdjustMethod = &quot;BH&quot;, universe = as.character(na.omit(ENTREZ_universe)), use_internal_data = FALSE ) if(nrow(KEGGresults@result %&gt;% filter(p.adjust &lt; pvalueCutoff)) &gt; 0){ DT::datatable(KEGGresults@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no KEGG pathways were found&quot; ## [1] &quot;no KEGG pathways were found&quot; "],["go-and-kegg-ptbp1-targets-06.html", "Chapter 4 GO and KEGG: PTBP1 targets 06 4.1 Load the data 4.2 Gene ontology (GO) 4.3 KEGG", " Chapter 4 GO and KEGG: PTBP1 targets 06 4.1 Load the data data_MAPP &lt;- read.table(&quot;data/inclusion_tables/0.6/ptbp1_exclusive_targets.tsv&quot;, header = T) # select control and cancer columns library(tidyverse) CTRL &lt;- data_MAPP %&gt;% dplyr::select_if(., grepl(&quot;^CONTROL_&quot;, names(.))) CANCER &lt;- data_MAPP %&gt;% dplyr::select_if(., grepl(&quot;^CANCER_&quot;, names(.))) # use row_t_welch instead of usual t.test function since t.test produces # errors in some cases: t.test error: data are essentially constant # NAs are assigned for problematic cases # https://stats.stackexchange.com/questions/499634/t-test-error-data-are-essentially-constant/499637 library(matrixTests) data_MAPP &lt;- data_MAPP %&gt;% mutate(padj = p.adjust(row_t_welch(CTRL, CANCER)$pvalue, method = &quot;BH&quot;, n=nrow(data_MAPP))) ## Warning: row_t_welch: 188 of the rows were essentially constant. ## First occurrence at row 42 # data_MAPP &lt;- data_MAPP %&gt;% # mutate(pval=row_t_welch(CTRL, CANCER)$pvalue) sum(is.na(data_MAPP$padj)) ## [1] 188 DT::datatable(data_MAPP, options = list(scrollX = TRUE)) 4.2 Gene ontology (GO) 4.2.1 Prepare the gene list # select genes from data_MAPP table based on padj values # threshold is set in index.Rmd: genes_padj_cutoff genes &lt;- na.omit(data_MAPP) %&gt;% arrange(desc(ABSDIFF)) %&gt;% filter(padj &lt; genes_padj_cutoff) %&gt;% dplyr::select(gene_id) %&gt;% unlist() genes &lt;- unlist(strsplit(genes, &quot;,&quot;)) head(genes) ## gene_id1 gene_id2 gene_id3 gene_id4 gene_id5 ## &quot;ENSG00000066230&quot; &quot;ENSG00000108018&quot; &quot;ENSG00000198910&quot; &quot;ENSG00000175182&quot; &quot;ENSG00000138443&quot; ## gene_id6 ## &quot;ENSG00000160410&quot; 4.2.2 Biological process (BP) type_of_GO = &quot;BP&quot; assign(paste0(&quot;GO_&quot;, type_of_GO), enrichGO( genes, organismDB, keyType = &quot;ENSEMBL&quot;, ont = type_of_GO, pvalueCutoff = pvalueCutoff, minGSSize = minGSSize, pAdjustMethod = &quot;BH&quot;, universe = universe, readable = TRUE)) df_GO &lt;- eval(parse(text = paste0(&quot;GO_&quot;, type_of_GO))) if(nrow(df_GO) &gt; 0){ DT::datatable(df_GO@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no GOs were found&quot; if(nrow(df_GO) &gt; 0){ barplot(df_GO, showCategory = showCategory, title = type_of_GO) } else &quot;no GOs to plot&quot; 4.2.3 Molecular function (MF) type_of_GO = &quot;MF&quot; assign(paste0(&quot;GO_&quot;, type_of_GO), enrichGO( genes, organismDB, keyType = &quot;ENSEMBL&quot;, ont = type_of_GO, pvalueCutoff = pvalueCutoff, minGSSize = minGSSize, pAdjustMethod = &quot;BH&quot;, universe = universe, readable = TRUE)) df_GO &lt;- eval(parse(text = paste0(&quot;GO_&quot;, type_of_GO))) if(nrow(df_GO) &gt; 0){ DT::datatable(df_GO@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no GOs were found&quot; if(nrow(df_GO) &gt; 0){ barplot(df_GO, showCategory = showCategory, title = type_of_GO) } else &quot;no GOs to plot&quot; 4.2.4 Cellular component (CC) type_of_GO = &quot;CC&quot; assign(paste0(&quot;GO_&quot;, type_of_GO), enrichGO( genes, organismDB, keyType = &quot;ENSEMBL&quot;, ont = type_of_GO, pvalueCutoff = pvalueCutoff, minGSSize = minGSSize, pAdjustMethod = &quot;BH&quot;, universe = universe, readable = TRUE)) df_GO &lt;- eval(parse(text = paste0(&quot;GO_&quot;, type_of_GO))) if(nrow(df_GO) &gt; 0){ DT::datatable(df_GO@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no GOs were found&quot; if(nrow(df_GO) &gt; 0){ barplot(df_GO, showCategory = showCategory, title = type_of_GO) } else &quot;no GOs to plot&quot; 4.3 KEGG 4.3.1 Prepare the the data # select gene_id in ENSEMBL format and DIFF from the result table DIFF &lt;- data_MAPP %&gt;% dplyr::select(gene_id, DIFF) # rename the gene_id column names(DIFF)[1] &lt;- &quot;ENSEMBL&quot; head(DIFF) # create new df by converting ENSEMBL ID into ENTREZID and adding DIFF column # sort table by in descending order by abs(DIFF) genes_ENTREZ_df &lt;- bitr(na.omit(data_MAPP$gene_id[data_MAPP$padj &lt; genes_padj_cutoff]), fromType = &quot;ENSEMBL&quot;, toType = &quot;ENTREZID&quot;, OrgDb= organismDB) %&gt;% left_join(DIFF, by = &quot;ENSEMBL&quot;) %&gt;% arrange(desc(abs(DIFF))) ## &#39;select()&#39; returned 1:1 mapping between keys and columns ## Warning in bitr(na.omit(data_MAPP$gene_id[data_MAPP$padj &lt; genes_padj_cutoff]), : 0.56% of input ## gene IDs are fail to map... head(genes_ENTREZ_df ) # create a vector with DIFF values genes_DIFF &lt;- genes_ENTREZ_df$DIFF genes_DIFF ## [1] -0.7386234447 0.7234788392 -0.7038045357 -0.6767915011 -0.6472437587 0.6375013660 ## [7] -0.6348159210 -0.6326628316 -0.6183222312 0.6174028876 -0.6140461704 -0.6090158816 ## [13] -0.6061716878 -0.6056684642 -0.5904575645 -0.5516013241 -0.5371580583 -0.5075359322 ## [19] -0.5060305047 -0.4982807580 -0.4886914984 -0.4807004864 0.4793950287 -0.4597016162 ## [25] -0.4537595538 0.4432134641 -0.4269054383 -0.4170725114 -0.4125588465 -0.4023926271 ## [31] 0.4023150393 -0.4011637408 -0.4008816599 -0.4000936554 -0.3963373228 -0.3961706940 ## [37] 0.3895177036 -0.3846735935 -0.3801249848 -0.3787195015 0.3732326499 -0.3647345621 ## [43] -0.3555227277 -0.3545908955 0.3524814618 -0.3484162073 -0.3418676330 -0.3350696756 ## [49] 0.3340303944 -0.3302687735 0.3230655549 -0.3128791385 -0.3127745804 -0.3123945288 ## [55] -0.3117062229 -0.3011135743 0.2994288198 0.2938941789 -0.2934065741 -0.2851575359 ## [61] 0.2805972602 -0.2796040305 -0.2781290345 -0.2737303878 -0.2705194645 -0.2683871228 ## [67] -0.2661378464 -0.2627351309 0.2564752438 -0.2521550892 0.2510039064 0.2499223522 ## [73] -0.2456948766 0.2433980030 0.2428143831 0.2408254676 -0.2389997061 -0.2387547898 ## [79] -0.2352394178 0.2300828606 -0.2248009201 -0.2227803174 -0.2214999913 -0.2153954570 ## [85] -0.2137842988 -0.2134123229 -0.2027331300 -0.2023366651 -0.2008920065 -0.2007350915 ## [91] 0.1981858275 -0.1956600082 -0.1948367359 -0.1946907931 -0.1936560438 0.1918771838 ## [97] -0.1907448643 0.1904533776 -0.1876549753 0.1834421396 -0.1815393577 -0.1739656969 ## [103] -0.1730988832 -0.1689056386 -0.1681718254 -0.1676786698 -0.1654800446 -0.1650522233 ## [109] -0.1605138528 0.1593921290 0.1584392564 -0.1582708466 0.1561459358 -0.1553110821 ## [115] -0.1522085839 0.1511253529 0.1508286268 -0.1467825838 -0.1454036449 -0.1453129239 ## [121] 0.1431509296 -0.1422417519 -0.1405528325 -0.1390944514 -0.1345836652 0.1344607384 ## [127] 0.1337166473 0.1325263215 -0.1320972171 -0.1294719137 -0.1268212659 -0.1255175715 ## [133] -0.1234657988 -0.1234367491 0.1228017521 0.1224734400 -0.1191688457 -0.1183739153 ## [139] 0.1165388302 0.1163248259 -0.1150050172 -0.1133982194 0.1095649637 -0.1092203820 ## [145] -0.1090249174 0.1082236252 0.1081349218 -0.1078565684 0.1021686602 -0.1021405510 ## [151] -0.1017850335 -0.1011212729 -0.1008642737 -0.1005088073 0.0986096766 -0.0977924474 ## [157] 0.0977829153 -0.0961249444 0.0955166707 0.0947785495 0.0929299031 -0.0884373350 ## [163] -0.0863868276 -0.0850413793 -0.0844963771 -0.0824228653 -0.0812306197 0.0755034384 ## [169] -0.0730146511 -0.0715218434 0.0707841541 -0.0678886226 -0.0678431712 -0.0674346764 ## [175] 0.0664003400 0.0657727492 -0.0654781001 -0.0617468658 0.0604758951 -0.0577699885 ## [181] -0.0570988592 0.0559417152 0.0554792429 0.0516835513 0.0507903936 -0.0501563469 ## [187] 0.0496979471 0.0482635643 -0.0462337926 -0.0461497350 0.0460694157 -0.0446575937 ## [193] 0.0434196510 -0.0420112994 0.0414736525 0.0398431020 -0.0396318218 0.0377492084 ## [199] 0.0358978456 -0.0353065495 0.0340554154 0.0330860783 0.0320450478 0.0312025862 ## [205] -0.0308098800 -0.0301416728 0.0290543184 -0.0287559638 -0.0282860442 -0.0276688124 ## [211] -0.0268656582 -0.0205277813 0.0199428484 -0.0189964783 -0.0170156134 0.0167677235 ## [217] 0.0163276144 -0.0148074982 0.0147491869 -0.0144495156 0.0121008836 -0.0119283709 ## [223] -0.0111842777 -0.0108655726 -0.0100437933 -0.0091958320 -0.0080699362 -0.0078104107 ## [229] 0.0069227451 -0.0053478687 0.0052309106 0.0049479082 -0.0037573453 -0.0037217345 ## [235] -0.0037147570 -0.0035988507 0.0034517318 0.0028603459 0.0019649759 -0.0019104518 ## [241] -0.0013964374 0.0012090716 -0.0006822893 0.0005137457 -0.0004821073 0.0004537414 ## [247] -0.0001317598 # add names based on ENTREZID names(genes_DIFF) &lt;- genes_ENTREZ_df$ENTREZID genes_DIFF ## 6550 114815 3897 131408 10152 92799 ## -0.7386234447 0.7234788392 -0.7038045357 -0.6767915011 -0.6472437587 0.6375013660 ## 3897 83744 10579 8567 60312 80823 ## -0.6348159210 -0.6326628316 -0.6183222312 0.6174028876 -0.6140461704 -0.6090158816 ## 55619 7168 8618 1639 23061 51123 ## -0.6061716878 -0.6056684642 -0.5904575645 -0.5516013241 -0.5371580583 -0.5075359322 ## 817 64840 3708 9776 55215 728340 ## -0.5060305047 -0.4982807580 -0.4886914984 -0.4807004864 0.4793950287 -0.4597016162 ## 10497 5570 160 2044 54899 5530 ## -0.4537595538 0.4432134641 -0.4269054383 -0.4170725114 -0.4125588465 -0.4023926271 ## 3084 22872 408 9612 254251 23187 ## 0.4023150393 -0.4011637408 -0.4008816599 -0.4000936554 -0.3963373228 -0.3961706940 ## 8906 23552 2542 483 253982 83707 ## 0.3895177036 -0.3846735935 -0.3801249848 -0.3787195015 0.3732326499 -0.3647345621 ## 1173 23265 351 79033 91404 162 ## -0.3555227277 -0.3545908955 0.3524814618 -0.3484162073 -0.3418676330 -0.3350696756 ## 123803 376497 55222 23041 57553 9138 ## 0.3340303944 -0.3302687735 0.3230655549 -0.3128791385 -0.3127745804 -0.3123945288 ## 5792 163 79132 112770 55578 92558 ## -0.3117062229 -0.3011135743 0.2994288198 0.2938941789 -0.2934065741 -0.2851575359 ## 6185 2710 93589 6092 23265 3708 ## 0.2805972602 -0.2796040305 -0.2781290345 -0.2737303878 -0.2705194645 -0.2683871228 ## 4629 145389 667 30837 637 56904 ## -0.2661378464 -0.2627351309 0.2564752438 -0.2521550892 0.2510039064 0.2499223522 ## 9223 221491 55680 116988 81544 55268 ## -0.2456948766 0.2433980030 0.2428143831 0.2408254676 -0.2389997061 -0.2387547898 ## 10540 7528 26505 23059 55268 581 ## -0.2352394178 0.2300828606 -0.2248009201 -0.2227803174 -0.2214999913 -0.2153954570 ## 55839 8715 11235 10210 23059 10540 ## -0.2137842988 -0.2134123229 -0.2027331300 -0.2023366651 -0.2008920065 -0.2007350915 ## 55863 2550 64221 26065 10536 54899 ## 0.1981858275 -0.1956600082 -0.1948367359 -0.1946907931 -0.1936560438 0.1918771838 ## 10076 25900 816 4291 1072 3708 ## -0.1907448643 0.1904533776 -0.1876549753 0.1834421396 -0.1815393577 -0.1739656969 ## 581 8514 4179 399818 3429 130162 ## -0.1730988832 -0.1689056386 -0.1681718254 -0.1676786698 -0.1654800446 -0.1650522233 ## 4957 9462 51 57666 6923 28990 ## -0.1605138528 0.1593921290 0.1584392564 -0.1582708466 0.1561459358 -0.1553110821 ## 1716 25909 23368 8479 9832 3159 ## -0.1522085839 0.1511253529 0.1508286268 -0.1467825838 -0.1454036449 -0.1453129239 ## 11113 23457 51 2710 5893 6923 ## 0.1431509296 -0.1422417519 -0.1405528325 -0.1390944514 -0.1345836652 0.1344607384 ## 84807 56990 51490 6198 3145 2934 ## 0.1337166473 0.1325263215 -0.1320972171 -0.1294719137 -0.1268212659 -0.1255175715 ## 5602 23263 29924 55215 8301 79629 ## -0.1234657988 -0.1234367491 0.1228017521 0.1224734400 -0.1191688457 -0.1183739153 ## 7266 2115 57553 1742 7920 55700 ## 0.1165388302 0.1163248259 -0.1150050172 -0.1133982194 0.1095649637 -0.1092203820 ## 124935 8869 10152 3429 740 10635 ## -0.1090249174 0.1082236252 0.1081349218 -0.1078565684 0.1021686602 -0.1021405510 ## 94239 7145 22859 5298 1954 57325 ## -0.1017850335 -0.1011212729 -0.1008642737 -0.1005088073 0.0986096766 -0.0977924474 ## 2039 254251 4782 7335 254251 54496 ## 0.0977829153 -0.0961249444 0.0955166707 0.0947785495 0.0929299031 -0.0884373350 ## 1716 5238 116988 29966 83707 10673 ## -0.0863868276 -0.0850413793 -0.0844963771 -0.0824228653 -0.0812306197 0.0755034384 ## 5434 192683 10051 8479 7018 5775 ## -0.0730146511 -0.0715218434 0.0707841541 -0.0678886226 -0.0678431712 -0.0674346764 ## 7168 5524 5602 5792 9158 10921 ## 0.0664003400 0.0657727492 -0.0654781001 -0.0617468658 0.0604758951 -0.0577699885 ## 80228 92799 79990 7168 64428 9223 ## -0.0570988592 0.0559417152 0.0554792429 0.0516835513 0.0507903936 -0.0501563469 ## 8869 2710 5727 80727 58485 9776 ## 0.0496979471 0.0482635643 -0.0462337926 -0.0461497350 0.0460694157 -0.0446575937 ## 80823 23463 780776 10533 1173 9138 ## 0.0434196510 -0.0420112994 0.0414736525 0.0398431020 -0.0396318218 0.0377492084 ## 2115 10025 7515 3895 3145 83707 ## 0.0358978456 -0.0353065495 0.0340554154 0.0330860783 0.0320450478 0.0312025862 ## 5602 7018 10497 55578 10921 30837 ## -0.0308098800 -0.0301416728 0.0290543184 -0.0287559638 -0.0282860442 -0.0276688124 ## 3785 729852 7266 118 10921 112869 ## -0.0268656582 -0.0205277813 0.0199428484 -0.0189964783 -0.0170156134 0.0167677235 ## 7335 29934 51564 2987 28990 7515 ## 0.0163276144 -0.0148074982 0.0147491869 -0.0144495156 0.0121008836 -0.0119283709 ## 192683 729852 10152 8869 22859 23313 ## -0.0111842777 -0.0108655726 -0.0100437933 -0.0091958320 -0.0080699362 -0.0078104107 ## 9138 92799 2934 729852 10025 163 ## 0.0069227451 -0.0053478687 0.0052309106 0.0049479082 -0.0037573453 -0.0037217345 ## 10051 5315 23059 5602 56904 8514 ## -0.0037147570 -0.0035988507 0.0034517318 0.0028603459 0.0019649759 -0.0019104518 ## 163 3895 1072 1954 4291 163 ## -0.0013964374 0.0012090716 -0.0006822893 0.0005137457 -0.0004821073 0.0004537414 ## 5602 ## -0.0001317598 4.3.2 run KEGG KEGGresults &lt;- enrichKEGG( names(genes_DIFF), organism = &quot;hsa&quot;, keyType = &quot;ncbi-geneid&quot;, pvalueCutoff = pvalueCutoff, pAdjustMethod = &quot;BH&quot;, universe = as.character(na.omit(ENTREZ_universe)), use_internal_data = FALSE ) if(nrow(KEGGresults@result %&gt;% filter(p.adjust &lt; pvalueCutoff)) &gt; 0){ DT::datatable(KEGGresults@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no KEGG pathways were found&quot; ## [1] &quot;no KEGG pathways were found&quot; "],["go-and-kegg-ptbp1-targets-09.html", "Chapter 5 GO and KEGG: PTBP1 targets 09 5.1 Load the data 5.2 Gene ontology (GO) 5.3 KEGG", " Chapter 5 GO and KEGG: PTBP1 targets 09 5.1 Load the data data_MAPP &lt;- read.table(&quot;data/inclusion_tables/0.9/ptbp1_exclusive_targets.tsv&quot;, header = T) # select control and cancer columns library(tidyverse) CTRL &lt;- data_MAPP %&gt;% dplyr::select_if(., grepl(&quot;^CONTROL_&quot;, names(.))) CANCER &lt;- data_MAPP %&gt;% dplyr::select_if(., grepl(&quot;^CANCER_&quot;, names(.))) # use row_t_welch instead of usual t.test function since t.test produces # errors in some cases: t.test error: data are essentially constant # NAs are assigned for problematic cases # https://stats.stackexchange.com/questions/499634/t-test-error-data-are-essentially-constant/499637 library(matrixTests) data_MAPP &lt;- data_MAPP %&gt;% mutate(padj = p.adjust(row_t_welch(CTRL, CANCER)$pvalue, method = &quot;BH&quot;, n=nrow(data_MAPP))) ## Warning: row_t_welch: 72 of the rows were essentially constant. ## First occurrence at row 20 # data_MAPP &lt;- data_MAPP %&gt;% # mutate(pval=row_t_welch(CTRL, CANCER)$pvalue) sum(is.na(data_MAPP$padj)) ## [1] 72 DT::datatable(data_MAPP, options = list(scrollX = TRUE)) 5.2 Gene ontology (GO) 5.2.1 Prepare the gene list # select genes from data_MAPP table based on padj values # threshold is set in index.Rmd: genes_padj_cutoff genes &lt;- na.omit(data_MAPP) %&gt;% arrange(desc(ABSDIFF)) %&gt;% filter(padj &lt; genes_padj_cutoff) %&gt;% dplyr::select(gene_id) %&gt;% unlist() genes &lt;- unlist(strsplit(genes, &quot;,&quot;)) head(genes) ## gene_id1 gene_id2 gene_id3 gene_id4 gene_id5 ## &quot;ENSG00000066230&quot; &quot;ENSG00000198910&quot; &quot;ENSG00000138443&quot; &quot;ENSG00000198910&quot; &quot;ENSG00000138162&quot; ## gene_id6 ## &quot;ENSG00000135905&quot; 5.2.2 Biological process (BP) type_of_GO = &quot;BP&quot; assign(paste0(&quot;GO_&quot;, type_of_GO), enrichGO( genes, organismDB, keyType = &quot;ENSEMBL&quot;, ont = type_of_GO, pvalueCutoff = pvalueCutoff, minGSSize = minGSSize, pAdjustMethod = &quot;BH&quot;, universe = universe, readable = TRUE)) df_GO &lt;- eval(parse(text = paste0(&quot;GO_&quot;, type_of_GO))) if(nrow(df_GO) &gt; 0){ DT::datatable(df_GO@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no GOs were found&quot; ## [1] &quot;no GOs were found&quot; if(nrow(df_GO) &gt; 0){ barplot(df_GO, showCategory = showCategory, title = type_of_GO) } else &quot;no GOs to plot&quot; ## [1] &quot;no GOs to plot&quot; 5.2.3 Molecular function (MF) type_of_GO = &quot;MF&quot; assign(paste0(&quot;GO_&quot;, type_of_GO), enrichGO( genes, organismDB, keyType = &quot;ENSEMBL&quot;, ont = type_of_GO, pvalueCutoff = pvalueCutoff, minGSSize = minGSSize, pAdjustMethod = &quot;BH&quot;, universe = universe, readable = TRUE)) df_GO &lt;- eval(parse(text = paste0(&quot;GO_&quot;, type_of_GO))) if(nrow(df_GO) &gt; 0){ DT::datatable(df_GO@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no GOs were found&quot; ## [1] &quot;no GOs were found&quot; if(nrow(df_GO) &gt; 0){ barplot(df_GO, showCategory = showCategory, title = type_of_GO) } else &quot;no GOs to plot&quot; ## [1] &quot;no GOs to plot&quot; 5.2.4 Cellular component (CC) type_of_GO = &quot;CC&quot; assign(paste0(&quot;GO_&quot;, type_of_GO), enrichGO( genes, organismDB, keyType = &quot;ENSEMBL&quot;, ont = type_of_GO, pvalueCutoff = pvalueCutoff, minGSSize = minGSSize, pAdjustMethod = &quot;BH&quot;, universe = universe, readable = TRUE)) df_GO &lt;- eval(parse(text = paste0(&quot;GO_&quot;, type_of_GO))) if(nrow(df_GO) &gt; 0){ DT::datatable(df_GO@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no GOs were found&quot; if(nrow(df_GO) &gt; 0){ barplot(df_GO, showCategory = showCategory, title = type_of_GO) } else &quot;no GOs to plot&quot; 5.3 KEGG 5.3.1 Prepare the the data # select gene_id in ENSEMBL format and DIFF from the result table DIFF &lt;- data_MAPP %&gt;% dplyr::select(gene_id, DIFF) # rename the gene_id column names(DIFF)[1] &lt;- &quot;ENSEMBL&quot; head(DIFF) # create new df by converting ENSEMBL ID into ENTREZID and adding DIFF column # sort table by in descending order by abs(DIFF) genes_ENTREZ_df &lt;- bitr(na.omit(data_MAPP$gene_id[data_MAPP$padj &lt; genes_padj_cutoff]), fromType = &quot;ENSEMBL&quot;, toType = &quot;ENTREZID&quot;, OrgDb= organismDB) %&gt;% left_join(DIFF, by = &quot;ENSEMBL&quot;) %&gt;% arrange(desc(abs(DIFF))) ## &#39;select()&#39; returned 1:1 mapping between keys and columns head(genes_ENTREZ_df ) # create a vector with DIFF values genes_DIFF &lt;- genes_ENTREZ_df$DIFF genes_DIFF ## [1] -0.7386234447 -0.7038045357 -0.6472437587 -0.6348159210 -0.6183222312 -0.6061716878 ## [7] -0.5904575645 -0.5516013241 -0.5371580583 -0.5060305047 -0.4982807580 -0.4886914984 ## [13] -0.4807004864 0.4793950287 0.4432134641 -0.4269054383 -0.4170725114 -0.4125588465 ## [19] 0.4023150393 -0.4011637408 -0.4008816599 -0.4000936554 -0.3963373228 -0.3961706940 ## [25] -0.3846735935 0.3804743706 -0.3801249848 -0.3787195015 -0.3647345621 -0.3545908955 ## [31] -0.3350696756 0.3161439703 -0.3128791385 -0.3123945288 -0.3089303409 -0.3011135743 ## [37] 0.2938941789 -0.2934065741 -0.2851575359 -0.2796040305 -0.2705194645 -0.2683871228 ## [43] -0.2627351309 0.2564752438 -0.2521550892 0.2510039064 0.2499223522 -0.2456948766 ## [49] 0.2433980030 0.2408254676 -0.2389997061 -0.2248009201 -0.2227803174 -0.2153954570 ## [55] -0.2027331300 -0.2008920065 0.1981858275 -0.1962084656 -0.1946907931 -0.1936560438 ## [61] 0.1904533776 -0.1876549753 0.1834421396 -0.1730988832 0.1717303192 -0.1689056386 ## [67] -0.1676786698 -0.1654800446 0.1626484206 0.1561459358 0.1524532329 -0.1522085839 ## [73] -0.1467825838 -0.1454036449 -0.1453129239 -0.1405528325 -0.1345836652 0.1344607384 ## [79] 0.1337166473 -0.1294719137 -0.1234657988 -0.1234367491 0.1228017521 0.1224734400 ## [85] -0.1191688457 -0.1150050172 -0.1136706999 -0.1133982194 0.1095649637 -0.1092203820 ## [91] -0.1090249174 0.1081349218 -0.1078565684 0.1021686602 -0.1021405510 -0.1017850335 ## [97] -0.1011212729 -0.1008642737 0.0955166707 -0.0884373350 -0.0863868276 -0.0824228653 ## [103] -0.0812306197 0.0755034384 -0.0730146511 -0.0715218434 -0.0678886226 -0.0674346764 ## [109] -0.0577699885 0.0507903936 -0.0501563469 -0.0462337926 -0.0461497350 0.0460694157 ## [115] -0.0460118164 -0.0449491477 -0.0420112994 0.0414736525 0.0398431020 -0.0353065495 ## [121] 0.0312025862 0.0284050762 -0.0282860442 -0.0276688124 -0.0205277813 -0.0189964783 ## [127] -0.0170156134 -0.0148074982 0.0147491869 -0.0144495156 -0.0108655726 -0.0100437933 ## [133] -0.0080699362 -0.0078104107 -0.0037217345 -0.0035988507 0.0034517318 -0.0013964374 ## [139] 0.0004537414 # add names based on ENTREZID names(genes_DIFF) &lt;- genes_ENTREZ_df$ENTREZID genes_DIFF ## 6550 3897 10152 3897 10579 55619 ## -0.7386234447 -0.7038045357 -0.6472437587 -0.6348159210 -0.6183222312 -0.6061716878 ## 8618 1639 23061 817 64840 3708 ## -0.5904575645 -0.5516013241 -0.5371580583 -0.5060305047 -0.4982807580 -0.4886914984 ## 9776 55215 5570 160 2044 54899 ## -0.4807004864 0.4793950287 0.4432134641 -0.4269054383 -0.4170725114 -0.4125588465 ## 3084 22872 408 9612 254251 23187 ## 0.4023150393 -0.4011637408 -0.4008816599 -0.4000936554 -0.3963373228 -0.3961706940 ## 23552 5567 2542 483 83707 23265 ## -0.3846735935 0.3804743706 -0.3801249848 -0.3787195015 -0.3647345621 -0.3545908955 ## 162 10669 23041 9138 773 163 ## -0.3350696756 0.3161439703 -0.3128791385 -0.3123945288 -0.3089303409 -0.3011135743 ## 112770 55578 92558 2710 23265 3708 ## 0.2938941789 -0.2934065741 -0.2851575359 -0.2796040305 -0.2705194645 -0.2683871228 ## 145389 667 30837 637 56904 9223 ## -0.2627351309 0.2564752438 -0.2521550892 0.2510039064 0.2499223522 -0.2456948766 ## 221491 116988 81544 26505 23059 581 ## 0.2433980030 0.2408254676 -0.2389997061 -0.2248009201 -0.2227803174 -0.2153954570 ## 11235 23059 55863 23028 26065 10536 ## -0.2027331300 -0.2008920065 0.1981858275 -0.1962084656 -0.1946907931 -0.1936560438 ## 25900 816 4291 581 501 8514 ## 0.1904533776 -0.1876549753 0.1834421396 -0.1730988832 0.1717303192 -0.1689056386 ## 399818 3429 57556 6923 55101 1716 ## -0.1676786698 -0.1654800446 0.1626484206 0.1561459358 0.1524532329 -0.1522085839 ## 8479 9832 3159 51 5893 6923 ## -0.1467825838 -0.1454036449 -0.1453129239 -0.1405528325 -0.1345836652 0.1344607384 ## 84807 6198 5602 23263 29924 55215 ## 0.1337166473 -0.1294719137 -0.1234657988 -0.1234367491 0.1228017521 0.1224734400 ## 8301 57553 5939 1742 7920 55700 ## -0.1191688457 -0.1150050172 -0.1136706999 -0.1133982194 0.1095649637 -0.1092203820 ## 124935 10152 3429 740 10635 94239 ## -0.1090249174 0.1081349218 -0.1078565684 0.1021686602 -0.1021405510 -0.1017850335 ## 7145 22859 4782 54496 1716 29966 ## -0.1011212729 -0.1008642737 0.0955166707 -0.0884373350 -0.0863868276 -0.0824228653 ## 83707 10673 5434 192683 8479 5775 ## -0.0812306197 0.0755034384 -0.0730146511 -0.0715218434 -0.0678886226 -0.0674346764 ## 10921 64428 9223 5727 80727 58485 ## -0.0577699885 0.0507903936 -0.0501563469 -0.0462337926 -0.0461497350 0.0460694157 ## 54963 55521 23463 780776 10533 10025 ## -0.0460118164 -0.0449491477 -0.0420112994 0.0414736525 0.0398431020 -0.0353065495 ## 83707 23531 10921 30837 729852 118 ## 0.0312025862 0.0284050762 -0.0282860442 -0.0276688124 -0.0205277813 -0.0189964783 ## 10921 29934 51564 2987 729852 10152 ## -0.0170156134 -0.0148074982 0.0147491869 -0.0144495156 -0.0108655726 -0.0100437933 ## 22859 23313 163 5315 23059 163 ## -0.0080699362 -0.0078104107 -0.0037217345 -0.0035988507 0.0034517318 -0.0013964374 ## 163 ## 0.0004537414 5.3.2 run KEGG KEGGresults &lt;- enrichKEGG( names(genes_DIFF), organism = &quot;hsa&quot;, keyType = &quot;ncbi-geneid&quot;, pvalueCutoff = pvalueCutoff, pAdjustMethod = &quot;BH&quot;, universe = as.character(na.omit(ENTREZ_universe)), use_internal_data = FALSE ) if(nrow(KEGGresults@result %&gt;% filter(p.adjust &lt; pvalueCutoff)) &gt; 0){ DT::datatable(KEGGresults@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no KEGG pathways were found&quot; "],["go-and-kegg-rbfox1-targets-06.html", "Chapter 6 GO and KEGG: RBFOX1 targets 06 6.1 Load the data 6.2 Gene ontology (GO) 6.3 KEGG", " Chapter 6 GO and KEGG: RBFOX1 targets 06 6.1 Load the data data_MAPP &lt;- read.table(&quot;data/inclusion_tables/0.6/rbfox1_exclusive_targets.tsv&quot;, header = T) # select control and cancer columns library(tidyverse) CTRL &lt;- data_MAPP %&gt;% dplyr::select_if(., grepl(&quot;^CONTROL_&quot;, names(.))) CANCER &lt;- data_MAPP %&gt;% dplyr::select_if(., grepl(&quot;^CANCER_&quot;, names(.))) # use row_t_welch instead of usual t.test function since t.test produces # errors in some cases: t.test error: data are essentially constant # NAs are assigned for problematic cases # https://stats.stackexchange.com/questions/499634/t-test-error-data-are-essentially-constant/499637 library(matrixTests) data_MAPP &lt;- data_MAPP %&gt;% mutate(padj = p.adjust(row_t_welch(CTRL, CANCER)$pvalue, method = &quot;BH&quot;, n=nrow(data_MAPP))) ## Warning: row_t_welch: 25 of the rows were essentially constant. ## First occurrence at row 11 # data_MAPP &lt;- data_MAPP %&gt;% # mutate(pval=row_t_welch(CTRL, CANCER)$pvalue) sum(is.na(data_MAPP$padj)) ## [1] 25 DT::datatable(data_MAPP, options = list(scrollX = TRUE)) 6.2 Gene ontology (GO) 6.2.1 Prepare the gene list # select genes from data_MAPP table based on padj values # threshold is set in index.Rmd: genes_padj_cutoff genes &lt;- na.omit(data_MAPP) %&gt;% arrange(desc(ABSDIFF)) %&gt;% filter(padj &lt; genes_padj_cutoff) %&gt;% dplyr::select(gene_id) %&gt;% unlist() genes &lt;- unlist(strsplit(genes, &quot;,&quot;)) head(genes) ## gene_id1 gene_id2 gene_id3 gene_id4 gene_id5 ## &quot;ENSG00000128739&quot; &quot;ENSG00000162623&quot; &quot;ENSG00000136153&quot; &quot;ENSG00000151746&quot; &quot;ENSG00000124831&quot; ## gene_id6 ## &quot;ENSG00000151276&quot; 6.2.2 Biological process (BP) type_of_GO = &quot;BP&quot; assign(paste0(&quot;GO_&quot;, type_of_GO), enrichGO( genes, organismDB, keyType = &quot;ENSEMBL&quot;, ont = type_of_GO, pvalueCutoff = pvalueCutoff, minGSSize = minGSSize, pAdjustMethod = &quot;BH&quot;, universe = universe, readable = TRUE)) df_GO &lt;- eval(parse(text = paste0(&quot;GO_&quot;, type_of_GO))) if(nrow(df_GO) &gt; 0){ DT::datatable(df_GO@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no GOs were found&quot; ## [1] &quot;no GOs were found&quot; if(nrow(df_GO) &gt; 0){ barplot(df_GO, showCategory = showCategory, title = type_of_GO) } else &quot;no GOs to plot&quot; ## [1] &quot;no GOs to plot&quot; 6.2.3 Molecular function (MF) type_of_GO = &quot;MF&quot; assign(paste0(&quot;GO_&quot;, type_of_GO), enrichGO( genes, organismDB, keyType = &quot;ENSEMBL&quot;, ont = type_of_GO, pvalueCutoff = pvalueCutoff, minGSSize = minGSSize, pAdjustMethod = &quot;BH&quot;, universe = universe, readable = TRUE)) df_GO &lt;- eval(parse(text = paste0(&quot;GO_&quot;, type_of_GO))) if(nrow(df_GO) &gt; 0){ DT::datatable(df_GO@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no GOs were found&quot; ## [1] &quot;no GOs were found&quot; if(nrow(df_GO) &gt; 0){ barplot(df_GO, showCategory = showCategory, title = type_of_GO) } else &quot;no GOs to plot&quot; ## [1] &quot;no GOs to plot&quot; 6.2.4 Cellular component (CC) type_of_GO = &quot;CC&quot; assign(paste0(&quot;GO_&quot;, type_of_GO), enrichGO( genes, organismDB, keyType = &quot;ENSEMBL&quot;, ont = type_of_GO, pvalueCutoff = pvalueCutoff, minGSSize = minGSSize, pAdjustMethod = &quot;BH&quot;, universe = universe, readable = TRUE)) df_GO &lt;- eval(parse(text = paste0(&quot;GO_&quot;, type_of_GO))) if(nrow(df_GO) &gt; 0){ DT::datatable(df_GO@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no GOs were found&quot; ## [1] &quot;no GOs were found&quot; if(nrow(df_GO) &gt; 0){ barplot(df_GO, showCategory = showCategory, title = type_of_GO) } else &quot;no GOs to plot&quot; ## [1] &quot;no GOs to plot&quot; 6.3 KEGG 6.3.1 Prepare the the data # select gene_id in ENSEMBL format and DIFF from the result table DIFF &lt;- data_MAPP %&gt;% dplyr::select(gene_id, DIFF) # rename the gene_id column names(DIFF)[1] &lt;- &quot;ENSEMBL&quot; head(DIFF) # create new df by converting ENSEMBL ID into ENTREZID and adding DIFF column # sort table by in descending order by abs(DIFF) genes_ENTREZ_df &lt;- bitr(na.omit(data_MAPP$gene_id[data_MAPP$padj &lt; genes_padj_cutoff]), fromType = &quot;ENSEMBL&quot;, toType = &quot;ENTREZID&quot;, OrgDb= organismDB) %&gt;% left_join(DIFF, by = &quot;ENSEMBL&quot;) %&gt;% arrange(desc(abs(DIFF))) ## &#39;select()&#39; returned 1:1 mapping between keys and columns head(genes_ENTREZ_df ) # create a vector with DIFF values genes_DIFF &lt;- genes_ENTREZ_df$DIFF genes_DIFF ## [1] 0.690837237 0.577310225 0.401096728 0.382944514 -0.361995945 -0.260050537 0.242900110 ## [8] 0.237877425 -0.237621079 -0.220808352 -0.209041756 -0.207505831 -0.199712508 0.176254170 ## [15] 0.170387727 -0.167819973 -0.157890447 0.150591208 0.148730810 -0.144259748 0.144017973 ## [22] 0.137094818 0.091228837 0.058470376 -0.035038742 -0.032856829 -0.003924551 0.000000000 # add names based on ENTREZID names(genes_DIFF) &lt;- genes_ENTREZ_df$ENTREZID genes_DIFF ## 6638 127253 4008 636 9208 9223 7994 ## 0.690837237 0.577310225 0.401096728 0.382944514 -0.361995945 -0.260050537 0.242900110 ## 4711 825 23543 8882 1456 5923 4008 ## 0.237877425 -0.237621079 -0.220808352 -0.209041756 -0.207505831 -0.199712508 0.176254170 ## 1176 1974 8073 166614 4711 25854 64327 ## 0.170387727 -0.167819973 -0.157890447 0.150591208 0.148730810 -0.144259748 0.144017973 ## 9474 63895 9117 9101 7073 9117 825 ## 0.137094818 0.091228837 0.058470376 -0.035038742 -0.032856829 -0.003924551 0.000000000 6.3.2 run KEGG KEGGresults &lt;- enrichKEGG( names(genes_DIFF), organism = &quot;hsa&quot;, keyType = &quot;ncbi-geneid&quot;, pvalueCutoff = pvalueCutoff, pAdjustMethod = &quot;BH&quot;, universe = as.character(na.omit(ENTREZ_universe)), use_internal_data = FALSE ) if(nrow(KEGGresults@result %&gt;% filter(p.adjust &lt; pvalueCutoff)) &gt; 0){ DT::datatable(KEGGresults@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no KEGG pathways were found&quot; ## [1] &quot;no KEGG pathways were found&quot; "],["go-and-kegg-rbfox1-targets-09.html", "Chapter 7 GO and KEGG: RBFOX1 targets 09 7.1 Load the data 7.2 Gene ontology (GO) 7.3 KEGG", " Chapter 7 GO and KEGG: RBFOX1 targets 09 7.1 Load the data data_MAPP &lt;- read.table(&quot;data/inclusion_tables/0.9/rbfox1_exclusive_targets.tsv&quot;, header = T) # select control and cancer columns library(tidyverse) CTRL &lt;- data_MAPP %&gt;% dplyr::select_if(., grepl(&quot;^CONTROL_&quot;, names(.))) CANCER &lt;- data_MAPP %&gt;% dplyr::select_if(., grepl(&quot;^CANCER_&quot;, names(.))) # use row_t_welch instead of usual t.test function since t.test produces # errors in some cases: t.test error: data are essentially constant # NAs are assigned for problematic cases # https://stats.stackexchange.com/questions/499634/t-test-error-data-are-essentially-constant/499637 library(matrixTests) data_MAPP &lt;- data_MAPP %&gt;% mutate(padj = p.adjust(row_t_welch(CTRL, CANCER)$pvalue, method = &quot;BH&quot;, n=nrow(data_MAPP))) ## Warning: row_t_welch: 22 of the rows were essentially constant. ## First occurrence at row 8 # data_MAPP &lt;- data_MAPP %&gt;% # mutate(pval=row_t_welch(CTRL, CANCER)$pvalue) sum(is.na(data_MAPP$padj)) ## [1] 22 DT::datatable(data_MAPP, options = list(scrollX = TRUE)) 7.2 Gene ontology (GO) 7.2.1 Prepare the gene list # select genes from data_MAPP table based on padj values # threshold is set in index.Rmd: genes_padj_cutoff genes &lt;- na.omit(data_MAPP) %&gt;% arrange(desc(ABSDIFF)) %&gt;% filter(padj &lt; genes_padj_cutoff) %&gt;% dplyr::select(gene_id) %&gt;% unlist() genes &lt;- unlist(strsplit(genes, &quot;,&quot;)) head(genes) ## gene_id1 gene_id2 gene_id3 gene_id4 gene_id5 ## &quot;ENSG00000128739&quot; &quot;ENSG00000162623&quot; &quot;ENSG00000151746&quot; &quot;ENSG00000124831&quot; &quot;ENSG00000151276&quot; ## gene_id6 ## &quot;ENSG00000083168&quot; 7.2.2 Biological process (BP) type_of_GO = &quot;BP&quot; assign(paste0(&quot;GO_&quot;, type_of_GO), enrichGO( genes, organismDB, keyType = &quot;ENSEMBL&quot;, ont = type_of_GO, pvalueCutoff = pvalueCutoff, minGSSize = minGSSize, pAdjustMethod = &quot;BH&quot;, universe = universe, readable = TRUE)) df_GO &lt;- eval(parse(text = paste0(&quot;GO_&quot;, type_of_GO))) if(nrow(df_GO) &gt; 0){ DT::datatable(df_GO@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no GOs were found&quot; ## [1] &quot;no GOs were found&quot; if(nrow(df_GO) &gt; 0){ barplot(df_GO, showCategory = showCategory, title = type_of_GO) } else &quot;no GOs to plot&quot; ## [1] &quot;no GOs to plot&quot; 7.2.3 Molecular function (MF) type_of_GO = &quot;MF&quot; assign(paste0(&quot;GO_&quot;, type_of_GO), enrichGO( genes, organismDB, keyType = &quot;ENSEMBL&quot;, ont = type_of_GO, pvalueCutoff = pvalueCutoff, minGSSize = minGSSize, pAdjustMethod = &quot;BH&quot;, universe = universe, readable = TRUE)) df_GO &lt;- eval(parse(text = paste0(&quot;GO_&quot;, type_of_GO))) if(nrow(df_GO) &gt; 0){ DT::datatable(df_GO@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no GOs were found&quot; ## [1] &quot;no GOs were found&quot; if(nrow(df_GO) &gt; 0){ barplot(df_GO, showCategory = showCategory, title = type_of_GO) } else &quot;no GOs to plot&quot; ## [1] &quot;no GOs to plot&quot; 7.2.4 Cellular component (CC) type_of_GO = &quot;CC&quot; assign(paste0(&quot;GO_&quot;, type_of_GO), enrichGO( genes, organismDB, keyType = &quot;ENSEMBL&quot;, ont = type_of_GO, pvalueCutoff = pvalueCutoff, minGSSize = minGSSize, pAdjustMethod = &quot;BH&quot;, universe = universe, readable = TRUE)) df_GO &lt;- eval(parse(text = paste0(&quot;GO_&quot;, type_of_GO))) if(nrow(df_GO) &gt; 0){ DT::datatable(df_GO@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no GOs were found&quot; ## [1] &quot;no GOs were found&quot; if(nrow(df_GO) &gt; 0){ barplot(df_GO, showCategory = showCategory, title = type_of_GO) } else &quot;no GOs to plot&quot; ## [1] &quot;no GOs to plot&quot; 7.3 KEGG 7.3.1 Prepare the the data # select gene_id in ENSEMBL format and DIFF from the result table DIFF &lt;- data_MAPP %&gt;% dplyr::select(gene_id, DIFF) # rename the gene_id column names(DIFF)[1] &lt;- &quot;ENSEMBL&quot; head(DIFF) # create new df by converting ENSEMBL ID into ENTREZID and adding DIFF column # sort table by in descending order by abs(DIFF) genes_ENTREZ_df &lt;- bitr(na.omit(data_MAPP$gene_id[data_MAPP$padj &lt; genes_padj_cutoff]), fromType = &quot;ENSEMBL&quot;, toType = &quot;ENTREZID&quot;, OrgDb= organismDB) %&gt;% left_join(DIFF, by = &quot;ENSEMBL&quot;) %&gt;% arrange(desc(abs(DIFF))) ## &#39;select()&#39; returned 1:1 mapping between keys and columns head(genes_ENTREZ_df ) # create a vector with DIFF values genes_DIFF &lt;- genes_ENTREZ_df$DIFF genes_DIFF ## [1] 0.690837237 0.577310225 0.382944514 -0.361995945 -0.260050537 0.242900110 0.237877425 ## [8] -0.237621079 -0.220808352 -0.213133251 -0.209041756 -0.207505831 -0.199712508 0.170387727 ## [15] -0.167819973 -0.157890447 0.150591208 0.148730810 -0.144259748 0.144017973 0.137094818 ## [22] 0.091228837 0.068864462 0.058470376 -0.035038742 -0.032856829 -0.003924551 0.000000000 # add names based on ENTREZID names(genes_DIFF) &lt;- genes_ENTREZ_df$ENTREZID genes_DIFF ## 6638 127253 636 9208 9223 7994 4711 ## 0.690837237 0.577310225 0.382944514 -0.361995945 -0.260050537 0.242900110 0.237877425 ## 825 23543 7419 8882 1456 5923 1176 ## -0.237621079 -0.220808352 -0.213133251 -0.209041756 -0.207505831 -0.199712508 0.170387727 ## 1974 8073 166614 4711 25854 64327 9474 ## -0.167819973 -0.157890447 0.150591208 0.148730810 -0.144259748 0.144017973 0.137094818 ## 63895 4775 9117 9101 7073 9117 825 ## 0.091228837 0.068864462 0.058470376 -0.035038742 -0.032856829 -0.003924551 0.000000000 7.3.2 run KEGG KEGGresults &lt;- enrichKEGG( names(genes_DIFF), organism = &quot;hsa&quot;, keyType = &quot;ncbi-geneid&quot;, pvalueCutoff = pvalueCutoff, pAdjustMethod = &quot;BH&quot;, universe = as.character(na.omit(ENTREZ_universe)), use_internal_data = FALSE ) if(nrow(KEGGresults@result %&gt;% filter(p.adjust &lt; pvalueCutoff)) &gt; 0){ DT::datatable(KEGGresults@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no KEGG pathways were found&quot; ## [1] &quot;no KEGG pathways were found&quot; "],["go-and-kegg-non-targets-06.html", "Chapter 8 GO and KEGG: non targets 06 8.1 Load the data 8.2 Gene ontology (GO) 8.3 KEGG", " Chapter 8 GO and KEGG: non targets 06 8.1 Load the data data_MAPP &lt;- read.table(&quot;data/inclusion_tables/0.6/non_targets.tsv&quot;, header = T) # select control and cancer columns library(tidyverse) CTRL &lt;- data_MAPP %&gt;% dplyr::select_if(., grepl(&quot;^CONTROL_&quot;, names(.))) CANCER &lt;- data_MAPP %&gt;% dplyr::select_if(., grepl(&quot;^CANCER_&quot;, names(.))) # use row_t_welch instead of usual t.test function since t.test produces # errors in some cases: t.test error: data are essentially constant # NAs are assigned for problematic cases # https://stats.stackexchange.com/questions/499634/t-test-error-data-are-essentially-constant/499637 library(matrixTests) data_MAPP &lt;- data_MAPP %&gt;% mutate(padj = p.adjust(row_t_welch(CTRL, CANCER)$pvalue, method = &quot;BH&quot;, n=nrow(data_MAPP))) ## Warning: row_t_welch: 107 of the rows were essentially constant. ## First occurrence at row 1 # data_MAPP &lt;- data_MAPP %&gt;% # mutate(pval=row_t_welch(CTRL, CANCER)$pvalue) sum(is.na(data_MAPP$padj)) ## [1] 107 DT::datatable(data_MAPP, options = list(scrollX = TRUE)) 8.2 Gene ontology (GO) 8.2.1 Prepare the gene list # select genes from data_MAPP table based on padj values # threshold is set in index.Rmd: genes_padj_cutoff genes &lt;- na.omit(data_MAPP) %&gt;% arrange(desc(ABSDIFF)) %&gt;% filter(padj &lt; genes_padj_cutoff) %&gt;% dplyr::select(gene_id) %&gt;% unlist() genes &lt;- unlist(strsplit(genes, &quot;,&quot;)) head(genes) ## gene_id1 gene_id2 gene_id3 gene_id4 gene_id51 ## &quot;ENSG00000196776&quot; &quot;ENSG00000104093&quot; &quot;ENSG00000102271&quot; &quot;ENSG00000214827&quot; &quot;ENSG00000166803&quot; ## gene_id52 ## &quot;ENSG00000259316&quot; 8.2.2 Biological process (BP) type_of_GO = &quot;BP&quot; assign(paste0(&quot;GO_&quot;, type_of_GO), enrichGO( genes, organismDB, keyType = &quot;ENSEMBL&quot;, ont = type_of_GO, pvalueCutoff = pvalueCutoff, minGSSize = minGSSize, pAdjustMethod = &quot;BH&quot;, universe = universe, readable = TRUE)) df_GO &lt;- eval(parse(text = paste0(&quot;GO_&quot;, type_of_GO))) if(nrow(df_GO) &gt; 0){ DT::datatable(df_GO@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no GOs were found&quot; ## [1] &quot;no GOs were found&quot; if(nrow(df_GO) &gt; 0){ barplot(df_GO, showCategory = showCategory, title = type_of_GO) } else &quot;no GOs to plot&quot; ## [1] &quot;no GOs to plot&quot; 8.2.3 Molecular function (MF) type_of_GO = &quot;MF&quot; assign(paste0(&quot;GO_&quot;, type_of_GO), enrichGO( genes, organismDB, keyType = &quot;ENSEMBL&quot;, ont = type_of_GO, pvalueCutoff = pvalueCutoff, minGSSize = minGSSize, pAdjustMethod = &quot;BH&quot;, universe = universe, readable = TRUE)) df_GO &lt;- eval(parse(text = paste0(&quot;GO_&quot;, type_of_GO))) if(nrow(df_GO) &gt; 0){ DT::datatable(df_GO@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no GOs were found&quot; ## [1] &quot;no GOs were found&quot; if(nrow(df_GO) &gt; 0){ barplot(df_GO, showCategory = showCategory, title = type_of_GO) } else &quot;no GOs to plot&quot; ## [1] &quot;no GOs to plot&quot; 8.2.4 Cellular component (CC) type_of_GO = &quot;CC&quot; assign(paste0(&quot;GO_&quot;, type_of_GO), enrichGO( genes, organismDB, keyType = &quot;ENSEMBL&quot;, ont = type_of_GO, pvalueCutoff = pvalueCutoff, minGSSize = minGSSize, pAdjustMethod = &quot;BH&quot;, universe = universe, readable = TRUE)) df_GO &lt;- eval(parse(text = paste0(&quot;GO_&quot;, type_of_GO))) if(nrow(df_GO) &gt; 0){ DT::datatable(df_GO@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no GOs were found&quot; ## [1] &quot;no GOs were found&quot; if(nrow(df_GO) &gt; 0){ barplot(df_GO, showCategory = showCategory, title = type_of_GO) } else &quot;no GOs to plot&quot; ## [1] &quot;no GOs to plot&quot; 8.3 KEGG 8.3.1 Prepare the the data # select gene_id in ENSEMBL format and DIFF from the result table DIFF &lt;- data_MAPP %&gt;% dplyr::select(gene_id, DIFF) # rename the gene_id column names(DIFF)[1] &lt;- &quot;ENSEMBL&quot; head(DIFF) # create new df by converting ENSEMBL ID into ENTREZID and adding DIFF column # sort table by in descending order by abs(DIFF) genes_ENTREZ_df &lt;- bitr(na.omit(data_MAPP$gene_id[data_MAPP$padj &lt; genes_padj_cutoff]), fromType = &quot;ENSEMBL&quot;, toType = &quot;ENTREZID&quot;, OrgDb= organismDB) %&gt;% left_join(DIFF, by = &quot;ENSEMBL&quot;) %&gt;% arrange(desc(abs(DIFF))) ## &#39;select()&#39; returned 1:many mapping between keys and columns ## Warning in bitr(na.omit(data_MAPP$gene_id[data_MAPP$padj &lt; genes_padj_cutoff]), : 1.15% of input ## gene IDs are fail to map... head(genes_ENTREZ_df ) # create a vector with DIFF values genes_DIFF &lt;- genes_ENTREZ_df$DIFF genes_DIFF ## [1] -0.866506924 0.718935136 -0.659072802 -0.621576133 -0.528670934 0.510542059 -0.418313583 ## [8] 0.402566080 0.383206663 -0.372208614 -0.352828023 -0.343327475 -0.328634971 -0.325454472 ## [15] 0.316591691 0.316401061 -0.309703567 -0.300101926 0.298972554 0.291218771 0.289326326 ## [22] 0.285919541 -0.276265372 -0.273459403 0.249998857 0.249998857 0.241861817 -0.237145356 ## [29] -0.234615217 -0.226314398 0.220021682 0.219873591 0.218977682 -0.216836466 -0.216015887 ## [36] 0.215664424 -0.215192674 -0.201077250 -0.198543716 -0.198004302 -0.193468626 -0.192606895 ## [43] 0.187960427 -0.178571654 -0.174016829 0.170521309 -0.167857431 0.158662091 0.155321273 ## [50] -0.154157988 0.153179153 -0.150818161 -0.142754980 0.137698349 -0.114531338 0.110782731 ## [57] 0.110103762 0.109984803 0.107074005 -0.099228726 -0.096491295 -0.095693324 -0.093992975 ## [64] 0.091762087 -0.089539766 0.084344634 0.083180580 0.081116714 -0.069154759 -0.062479275 ## [71] -0.062207711 0.058660015 -0.052500897 0.051637080 0.049500900 0.047042407 -0.043444025 ## [78] -0.043248934 0.038903354 0.037193892 0.034200950 0.033279535 -0.031260604 0.029926820 ## [85] -0.027969573 0.026843593 0.023857447 0.016108454 0.012890170 -0.012334276 -0.010469745 ## [92] -0.008625834 0.008382196 0.007682573 -0.004842802 -0.004121580 0.000000000 0.000000000 # add names based on ENTREZID names(genes_DIFF) &lt;- genes_ENTREZ_df$ENTREZID genes_DIFF ## 961 23312 56062 4515 259266 79980 64151 ## -0.866506924 0.718935136 -0.659072802 -0.621576133 -0.528670934 0.510542059 -0.418313583 ## 9581 5218 10138 9321 220869 23484 5058 ## 0.402566080 0.383206663 -0.372208614 -0.352828023 -0.343327475 -0.328634971 -0.325454472 ## 55680 27005 55905 133015 79980 4179 199704 ## 0.316591691 0.316401061 -0.309703567 -0.300101926 0.298972554 0.291218771 0.289326326 ## 2958 7220 727957 6606 6607 79632 25896 ## 0.285919541 -0.276265372 -0.273459403 0.249998857 0.249998857 0.241861817 -0.237145356 ## 23300 57488 55051 55681 2186 54832 3093 ## -0.234615217 -0.226314398 0.220021682 0.219873591 0.218977682 -0.216836466 -0.216015887 ## 7871 8767 57180 7884 7091 1964 80232 ## 0.215664424 -0.215192674 -0.201077250 -0.198543716 -0.198004302 -0.193468626 -0.192606895 ## 55791 80315 56940 6124 55740 25950 339487 ## 0.187960427 -0.178571654 -0.174016829 0.170521309 -0.167857431 0.158662091 0.155321273 ## 1499 286144 130271 1894 161823 224 50999 ## -0.154157988 0.153179153 -0.150818161 -0.142754980 0.137698349 -0.114531338 0.110782731 ## 55529 311 51389 9556 79068 7091 26009 ## 0.110103762 0.109984803 0.107074005 -0.099228726 -0.096491295 -0.095693324 -0.093992975 ## 10923 90362 114625 9403 84461 8073 4179 ## 0.091762087 -0.089539766 0.084344634 0.083180580 0.081116714 -0.069154759 -0.062479275 ## 9444 1207 6632 51592 1207 8822 79096 ## -0.062207711 0.058660015 -0.052500897 0.051637080 0.049500900 0.047042407 -0.043444025 ## 8803 27005 8893 10138 79664 4601 8575 ## -0.043248934 0.038903354 0.037193892 0.034200950 0.033279535 -0.031260604 0.029926820 ## 262 10856 25764 51164 55681 5571 127829 ## -0.027969573 0.026843593 0.023857447 0.016108454 0.012890170 -0.012334276 -0.010469745 ## 22796 224 8575 83658 1176 224 7091 ## -0.008625834 0.008382196 0.007682573 -0.004842802 -0.004121580 0.000000000 0.000000000 8.3.2 run KEGG KEGGresults &lt;- enrichKEGG( names(genes_DIFF), organism = &quot;hsa&quot;, keyType = &quot;ncbi-geneid&quot;, pvalueCutoff = pvalueCutoff, pAdjustMethod = &quot;BH&quot;, universe = as.character(na.omit(ENTREZ_universe)), use_internal_data = FALSE ) if(nrow(KEGGresults@result %&gt;% filter(p.adjust &lt; pvalueCutoff)) &gt; 0){ DT::datatable(KEGGresults@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no KEGG pathways were found&quot; "],["go-and-kegg-non-targets-09.html", "Chapter 9 GO and KEGG: non targets 09 9.1 Load the data 9.2 Gene ontology (GO) 9.3 KEGG", " Chapter 9 GO and KEGG: non targets 09 9.1 Load the data data_MAPP &lt;- read.table(&quot;data/inclusion_tables/0.9/non_targets.tsv&quot;, header = T) # select control and cancer columns library(tidyverse) CTRL &lt;- data_MAPP %&gt;% dplyr::select_if(., grepl(&quot;^CONTROL_&quot;, names(.))) CANCER &lt;- data_MAPP %&gt;% dplyr::select_if(., grepl(&quot;^CANCER_&quot;, names(.))) # use row_t_welch instead of usual t.test function since t.test produces # errors in some cases: t.test error: data are essentially constant # NAs are assigned for problematic cases # https://stats.stackexchange.com/questions/499634/t-test-error-data-are-essentially-constant/499637 library(matrixTests) data_MAPP &lt;- data_MAPP %&gt;% mutate(padj = p.adjust(row_t_welch(CTRL, CANCER)$pvalue, method = &quot;BH&quot;, n=nrow(data_MAPP))) ## Warning: row_t_welch: 107 of the rows were essentially constant. ## First occurrence at row 1 # data_MAPP &lt;- data_MAPP %&gt;% # mutate(pval=row_t_welch(CTRL, CANCER)$pvalue) sum(is.na(data_MAPP$padj)) ## [1] 107 DT::datatable(data_MAPP, options = list(scrollX = TRUE)) 9.2 Gene ontology (GO) 9.2.1 Prepare the gene list # select genes from data_MAPP table based on padj values # threshold is set in index.Rmd: genes_padj_cutoff genes &lt;- na.omit(data_MAPP) %&gt;% arrange(desc(ABSDIFF)) %&gt;% filter(padj &lt; genes_padj_cutoff) %&gt;% dplyr::select(gene_id) %&gt;% unlist() genes &lt;- unlist(strsplit(genes, &quot;,&quot;)) head(genes) ## gene_id1 gene_id2 gene_id3 gene_id4 gene_id51 ## &quot;ENSG00000196776&quot; &quot;ENSG00000104093&quot; &quot;ENSG00000102271&quot; &quot;ENSG00000214827&quot; &quot;ENSG00000166803&quot; ## gene_id52 ## &quot;ENSG00000259316&quot; 9.2.2 Biological process (BP) type_of_GO = &quot;BP&quot; assign(paste0(&quot;GO_&quot;, type_of_GO), enrichGO( genes, organismDB, keyType = &quot;ENSEMBL&quot;, ont = type_of_GO, pvalueCutoff = pvalueCutoff, minGSSize = minGSSize, pAdjustMethod = &quot;BH&quot;, universe = universe, readable = TRUE)) df_GO &lt;- eval(parse(text = paste0(&quot;GO_&quot;, type_of_GO))) if(nrow(df_GO) &gt; 0){ DT::datatable(df_GO@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no GOs were found&quot; ## [1] &quot;no GOs were found&quot; if(nrow(df_GO) &gt; 0){ barplot(df_GO, showCategory = showCategory, title = type_of_GO) } else &quot;no GOs to plot&quot; ## [1] &quot;no GOs to plot&quot; 9.2.3 Molecular function (MF) type_of_GO = &quot;MF&quot; assign(paste0(&quot;GO_&quot;, type_of_GO), enrichGO( genes, organismDB, keyType = &quot;ENSEMBL&quot;, ont = type_of_GO, pvalueCutoff = pvalueCutoff, minGSSize = minGSSize, pAdjustMethod = &quot;BH&quot;, universe = universe, readable = TRUE)) df_GO &lt;- eval(parse(text = paste0(&quot;GO_&quot;, type_of_GO))) if(nrow(df_GO) &gt; 0){ DT::datatable(df_GO@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no GOs were found&quot; ## [1] &quot;no GOs were found&quot; if(nrow(df_GO) &gt; 0){ barplot(df_GO, showCategory = showCategory, title = type_of_GO) } else &quot;no GOs to plot&quot; ## [1] &quot;no GOs to plot&quot; 9.2.4 Cellular component (CC) type_of_GO = &quot;CC&quot; assign(paste0(&quot;GO_&quot;, type_of_GO), enrichGO( genes, organismDB, keyType = &quot;ENSEMBL&quot;, ont = type_of_GO, pvalueCutoff = pvalueCutoff, minGSSize = minGSSize, pAdjustMethod = &quot;BH&quot;, universe = universe, readable = TRUE)) df_GO &lt;- eval(parse(text = paste0(&quot;GO_&quot;, type_of_GO))) if(nrow(df_GO) &gt; 0){ DT::datatable(df_GO@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no GOs were found&quot; ## [1] &quot;no GOs were found&quot; if(nrow(df_GO) &gt; 0){ barplot(df_GO, showCategory = showCategory, title = type_of_GO) } else &quot;no GOs to plot&quot; ## [1] &quot;no GOs to plot&quot; 9.3 KEGG 9.3.1 Prepare the the data # select gene_id in ENSEMBL format and DIFF from the result table DIFF &lt;- data_MAPP %&gt;% dplyr::select(gene_id, DIFF) # rename the gene_id column names(DIFF)[1] &lt;- &quot;ENSEMBL&quot; head(DIFF) # create new df by converting ENSEMBL ID into ENTREZID and adding DIFF column # sort table by in descending order by abs(DIFF) genes_ENTREZ_df &lt;- bitr(na.omit(data_MAPP$gene_id[data_MAPP$padj &lt; genes_padj_cutoff]), fromType = &quot;ENSEMBL&quot;, toType = &quot;ENTREZID&quot;, OrgDb= organismDB) %&gt;% left_join(DIFF, by = &quot;ENSEMBL&quot;) %&gt;% arrange(desc(abs(DIFF))) ## &#39;select()&#39; returned 1:many mapping between keys and columns ## Warning in bitr(na.omit(data_MAPP$gene_id[data_MAPP$padj &lt; genes_padj_cutoff]), : 1.15% of input ## gene IDs are fail to map... head(genes_ENTREZ_df ) # create a vector with DIFF values genes_DIFF &lt;- genes_ENTREZ_df$DIFF genes_DIFF ## [1] -0.866506924 0.718935136 -0.659072802 -0.621576133 -0.528670934 0.510542059 -0.418313583 ## [8] 0.402566080 0.383206663 -0.372208614 -0.352828023 -0.343327475 -0.328634971 -0.325454472 ## [15] 0.316591691 0.316401061 -0.309703567 -0.300101926 0.298972554 0.291218771 0.289326326 ## [22] 0.285919541 -0.276265372 -0.273459403 0.249998857 0.249998857 0.241861817 -0.237145356 ## [29] -0.234615217 -0.226314398 0.220021682 0.219873591 0.218977682 -0.216836466 -0.216015887 ## [36] 0.215664424 -0.215192674 -0.201077250 -0.198543716 -0.198004302 -0.193468626 -0.192606895 ## [43] 0.187960427 -0.178571654 -0.174016829 0.170521309 -0.167857431 0.158662091 0.155321273 ## [50] -0.154157988 0.153179153 -0.150818161 -0.142754980 0.137698349 -0.114531338 0.110782731 ## [57] 0.110103762 0.109984803 0.107074005 -0.099228726 -0.096491295 -0.095693324 -0.093992975 ## [64] 0.091762087 -0.089539766 0.084344634 0.083180580 0.081116714 -0.069154759 -0.062479275 ## [71] -0.062207711 0.058660015 -0.052500897 0.051637080 0.049500900 0.047042407 -0.043444025 ## [78] -0.043248934 0.038903354 0.037193892 0.034200950 0.033279535 -0.031260604 0.029926820 ## [85] -0.027969573 0.026843593 0.023857447 0.016108454 0.012890170 -0.012334276 -0.010469745 ## [92] -0.008625834 0.008382196 0.007682573 -0.004842802 -0.004121580 0.000000000 0.000000000 # add names based on ENTREZID names(genes_DIFF) &lt;- genes_ENTREZ_df$ENTREZID genes_DIFF ## 961 23312 56062 4515 259266 79980 64151 ## -0.866506924 0.718935136 -0.659072802 -0.621576133 -0.528670934 0.510542059 -0.418313583 ## 9581 5218 10138 9321 220869 23484 5058 ## 0.402566080 0.383206663 -0.372208614 -0.352828023 -0.343327475 -0.328634971 -0.325454472 ## 55680 27005 55905 133015 79980 4179 199704 ## 0.316591691 0.316401061 -0.309703567 -0.300101926 0.298972554 0.291218771 0.289326326 ## 2958 7220 727957 6606 6607 79632 25896 ## 0.285919541 -0.276265372 -0.273459403 0.249998857 0.249998857 0.241861817 -0.237145356 ## 23300 57488 55051 55681 2186 54832 3093 ## -0.234615217 -0.226314398 0.220021682 0.219873591 0.218977682 -0.216836466 -0.216015887 ## 7871 8767 57180 7884 7091 1964 80232 ## 0.215664424 -0.215192674 -0.201077250 -0.198543716 -0.198004302 -0.193468626 -0.192606895 ## 55791 80315 56940 6124 55740 25950 339487 ## 0.187960427 -0.178571654 -0.174016829 0.170521309 -0.167857431 0.158662091 0.155321273 ## 1499 286144 130271 1894 161823 224 50999 ## -0.154157988 0.153179153 -0.150818161 -0.142754980 0.137698349 -0.114531338 0.110782731 ## 55529 311 51389 9556 79068 7091 26009 ## 0.110103762 0.109984803 0.107074005 -0.099228726 -0.096491295 -0.095693324 -0.093992975 ## 10923 90362 114625 9403 84461 8073 4179 ## 0.091762087 -0.089539766 0.084344634 0.083180580 0.081116714 -0.069154759 -0.062479275 ## 9444 1207 6632 51592 1207 8822 79096 ## -0.062207711 0.058660015 -0.052500897 0.051637080 0.049500900 0.047042407 -0.043444025 ## 8803 27005 8893 10138 79664 4601 8575 ## -0.043248934 0.038903354 0.037193892 0.034200950 0.033279535 -0.031260604 0.029926820 ## 262 10856 25764 51164 55681 5571 127829 ## -0.027969573 0.026843593 0.023857447 0.016108454 0.012890170 -0.012334276 -0.010469745 ## 22796 224 8575 83658 1176 224 7091 ## -0.008625834 0.008382196 0.007682573 -0.004842802 -0.004121580 0.000000000 0.000000000 9.3.2 run KEGG KEGGresults &lt;- enrichKEGG( names(genes_DIFF), organism = &quot;hsa&quot;, keyType = &quot;ncbi-geneid&quot;, pvalueCutoff = pvalueCutoff, pAdjustMethod = &quot;BH&quot;, universe = as.character(na.omit(ENTREZ_universe)), use_internal_data = FALSE ) if(nrow(KEGGresults@result %&gt;% filter(p.adjust &lt; pvalueCutoff)) &gt; 0){ DT::datatable(KEGGresults@result %&gt;% filter(p.adjust &lt; pvalueCutoff), options = list(scrollX = TRUE)) } else &quot;no KEGG pathways were found&quot; "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
